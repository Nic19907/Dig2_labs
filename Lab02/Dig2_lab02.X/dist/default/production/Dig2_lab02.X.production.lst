

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 03 11:25:44 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383                           
   384                           	psect	strings
   385  0400                     __pstrings:
   386  0400                     stringtab:
   387  0400                     __stringtab:
   388                           
   389                           ;	String table - string pointers are 1 byte each
   390  0400  1BFF               	btfsc	btemp+1,7
   391  0401  2C0A               	ljmp	stringcode
   392  0402  1383               	bcf	3,7
   393  0403  187F               	btfsc	btemp+1,0
   394  0404  1783               	bsf	3,7
   395  0405  0800               	movf	0,w
   396  0406  0A84               	incf	4,f
   397  0407  1903               	skipnz
   398  0408  0AFF               	incf	btemp+1,f
   399  0409  0008               	return
   400  040A                     stringcode:
   401  040A                     stringdir:
   402  040A  3004               	movlw	high stringdir
   403  040B  008A               	movwf	10
   404  040C  0804               	movf	4,w
   405  040D  0A84               	incf	4,f
   406  040E  0782               	addwf	2,f
   407  040F                     __stringbase:
   408  040F  3400               	retlw	0
   409  0410                     __end_of__stringtab:
   410  0410                     _dpowers:
   411  0410  3401               	retlw	1
   412  0411  3400               	retlw	0
   413  0412  340A               	retlw	10
   414  0413  3400               	retlw	0
   415  0414  3464               	retlw	100
   416  0415  3400               	retlw	0
   417  0416  34E8               	retlw	232
   418  0417  3403               	retlw	3
   419  0418  3410               	retlw	16
   420  0419  3427               	retlw	39
   421  041A                     __end_of_dpowers:
   422  0007                     _PORTCbits	set	7
   423  000B                     _INTCONbits	set	11
   424  0010                     _T1CONbits	set	16
   425  0008                     _PORTD	set	8
   426  0007                     _PORTC	set	7
   427  0006                     _PORTB	set	6
   428  0005                     _PORTA	set	5
   429  001E                     _ADRESH	set	30
   430  001F                     _ADCON0bits	set	31
   431  000E                     _TMR1L	set	14
   432  000F                     _TMR1H	set	15
   433  000C                     _PIR1bits	set	12
   434  009F                     _ADCON1bits	set	159
   435  008C                     _PIE1bits	set	140
   436  008F                     _OSCCONbits	set	143
   437  0088                     _TRISD	set	136
   438  0087                     _TRISC	set	135
   439  0086                     _TRISB	set	134
   440  0085                     _TRISAbits	set	133
   441  0085                     _TRISA	set	133
   442  0189                     _ANSELH	set	393
   443  0188                     _ANSELbits	set	392
   444  0188                     _ANSEL	set	392
   445  041A                     STR_4:
   446  041A  3453               	retlw	83	;'S'
   447  041B  3431               	retlw	49	;'1'
   448  041C  343A               	retlw	58	;':'
   449  041D  3420               	retlw	32	;' '
   450  041E  3420               	retlw	32	;' '
   451  041F  3420               	retlw	32	;' '
   452  0420  3453               	retlw	83	;'S'
   453  0421  3432               	retlw	50	;'2'
   454  0422  343A               	retlw	58	;':'
   455  0423  3420               	retlw	32	;' '
   456  0424  3420               	retlw	32	;' '
   457  0425  3453               	retlw	83	;'S'
   458  0426  3433               	retlw	51	;'3'
   459  0427  343A               	retlw	58	;':'
   460  0428  3400               	retlw	0
   461  0429                     STR_1:
   462  0429  3425               	retlw	37	;'%'
   463  042A  3464               	retlw	100	;'d'
   464  042B  342E               	retlw	46	;'.'
   465  042C  3425               	retlw	37	;'%'
   466  042D  3464               	retlw	100	;'d'
   467  042E  3425               	retlw	37	;'%'
   468  042F  3464               	retlw	100	;'d'
   469  0430  3400               	retlw	0
   470  0431                     STR_2:
   471  0431  3456               	retlw	86	;'V'
   472  0432  3420               	retlw	32	;' '
   473  0433  3400               	retlw	0
   474  0431                     
   475                           	psect	cinit
   476  000F                     start_initialization:	
   477                           ; #config settings
   478                           
   479  000F                     __initialization:
   480                           
   481                           ; Clear objects allocated to COMMON
   482  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   483  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   484  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   485                           
   486                           ; Clear objects allocated to BANK0
   487  0012  1283               	bcf	3,5	;RP0=0, select bank0
   488  0013  1303               	bcf	3,6	;RP1=0, select bank0
   489  0014  01C6               	clrf	__pbssBANK0& (0+127)
   490  0015  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   491  0016  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   492  0017  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   493  0018  01CA               	clrf	(__pbssBANK0+4)& (0+127)
   494  0019  01CB               	clrf	(__pbssBANK0+5)& (0+127)
   495  001A  01CC               	clrf	(__pbssBANK0+6)& (0+127)
   496  001B  01CD               	clrf	(__pbssBANK0+7)& (0+127)
   497  001C  01CE               	clrf	(__pbssBANK0+8)& (0+127)
   498  001D  01CF               	clrf	(__pbssBANK0+9)& (0+127)
   499  001E  01D0               	clrf	(__pbssBANK0+10)& (0+127)
   500  001F  01D1               	clrf	(__pbssBANK0+11)& (0+127)
   501  0020  01D2               	clrf	(__pbssBANK0+12)& (0+127)
   502  0021                     end_of_initialization:	
   503                           ;End of C runtime variable initialization code
   504                           
   505  0021                     __end_of__initialization:
   506  0021  0183               	clrf	3
   507  0022  120A  118A  290F   	ljmp	_main	;jump to C main() function
   508                           
   509                           	psect	bssCOMMON
   510  0078                     __pbssCOMMON:
   511  0078                     _valor:
   512  0078                     	ds	1
   513  0079                     _volt2:
   514  0079                     	ds	1
   515  007A                     _volt1:
   516  007A                     	ds	1
   517                           
   518                           	psect	bssBANK0
   519  0046                     __pbssBANK0:
   520  0046                     _value:
   521  0046                     	ds	2
   522  0048                     _uni:
   523  0048                     	ds	1
   524  0049                     _dec:
   525  0049                     	ds	1
   526  004A                     _cen:
   527  004A                     	ds	1
   528  004B                     _adc_change:
   529  004B                     	ds	1
   530  004C                     _pote2:
   531  004C                     	ds	1
   532  004D                     _pote1:
   533  004D                     	ds	1
   534  004E                     _buffer:
   535  004E                     	ds	5
   536                           
   537                           	psect	cstackCOMMON
   538  0070                     __pcstackCOMMON:
   539  0070                     ?_config_io:
   540  0070                     ?_config_clock:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_config_tmr1:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_config_ie:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_config_adc:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_lcd_setup:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_con_ADC:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_LCD_START:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_setup:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_isr:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ??_isr:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_transform:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_flip_EN:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_LCD_CMD:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_LCD_write:	
   583                           ; 1 bytes @ 0x0
   584                           
   585                           
   586                           ; 1 bytes @ 0x0
   587  0070                     	ds	3
   588  0073                     ??_config_io:
   589  0073                     ??_config_clock:	
   590                           ; 1 bytes @ 0x3
   591                           
   592  0073                     ??_config_tmr1:	
   593                           ; 1 bytes @ 0x3
   594                           
   595  0073                     ??_config_ie:	
   596                           ; 1 bytes @ 0x3
   597                           
   598  0073                     ??_con_ADC:	
   599                           ; 1 bytes @ 0x3
   600                           
   601  0073                     ??_flip_EN:	
   602                           ; 1 bytes @ 0x3
   603                           
   604  0073                     ?___wmul:	
   605                           ; 1 bytes @ 0x3
   606                           
   607  0073                     ?___lwdiv:	
   608                           ; 2 bytes @ 0x3
   609                           
   610  0073                     con_ADC@ADC_valor:	
   611                           ; 2 bytes @ 0x3
   612                           
   613  0073                     ___wmul@multiplier:	
   614                           ; 1 bytes @ 0x3
   615                           
   616  0073                     ___lwdiv@divisor:	
   617                           ; 2 bytes @ 0x3
   618                           
   619                           
   620                           ; 2 bytes @ 0x3
   621  0073                     	ds	1
   622  0074                     ??_config_adc:
   623                           
   624                           ; 1 bytes @ 0x4
   625  0074                     	ds	1
   626  0075                     ??_LCD_CMD:
   627  0075                     ??_LCD_write:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0075                     LCD_CMD@cmd:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     LCD_write@value:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0075                     ___wmul@multiplicand:	
   637                           ; 1 bytes @ 0x5
   638                           
   639  0075                     ___lwdiv@dividend:	
   640                           ; 2 bytes @ 0x5
   641                           
   642                           
   643                           ; 2 bytes @ 0x5
   644  0075                     	ds	1
   645  0076                     ?_LCD_setCursor:
   646  0076                     ?_LCD_writeString:	
   647                           ; 1 bytes @ 0x6
   648                           
   649  0076                     ??_LCD_START:	
   650                           ; 1 bytes @ 0x6
   651                           
   652  0076                     LCD_setCursor@columna:	
   653                           ; 1 bytes @ 0x6
   654                           
   655  0076                     LCD_writeString@text:	
   656                           ; 1 bytes @ 0x6
   657                           
   658                           
   659                           ; 2 bytes @ 0x6
   660  0076                     	ds	1
   661  0077                     ??___wmul:
   662  0077                     ??___awdiv:	
   663                           ; 1 bytes @ 0x7
   664                           
   665  0077                     ??___lwdiv:	
   666                           ; 1 bytes @ 0x7
   667                           
   668  0077                     LCD_setCursor@fila:	
   669                           ; 1 bytes @ 0x7
   670                           
   671                           
   672                           ; 1 bytes @ 0x7
   673  0077                     	ds	1
   674  0078                     ??_lcd_setup:
   675  0078                     ??_setup:	
   676                           ; 1 bytes @ 0x8
   677                           
   678                           
   679                           	psect	cstackBANK0
   680  0020                     __pcstackBANK0:	
   681                           ; 1 bytes @ 0x8
   682                           
   683  0020                     ??_LCD_setCursor:
   684  0020                     ??_LCD_writeString:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0020                     ___lwdiv@counter:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0020                     ___wmul@product:	
   691                           ; 1 bytes @ 0x0
   692                           
   693                           
   694                           ; 2 bytes @ 0x0
   695  0020                     	ds	1
   696  0021                     ___lwdiv@quotient:
   697                           
   698                           ; 2 bytes @ 0x1
   699  0021                     	ds	1
   700  0022                     ?___awdiv:
   701  0022                     ___awdiv@divisor:	
   702                           ; 2 bytes @ 0x2
   703                           
   704                           
   705                           ; 2 bytes @ 0x2
   706  0022                     	ds	1
   707  0023                     ?___lwmod:
   708  0023                     LCD_writeString@i:	
   709                           ; 2 bytes @ 0x3
   710                           
   711  0023                     ___lwmod@divisor:	
   712                           ; 2 bytes @ 0x3
   713                           
   714                           
   715                           ; 2 bytes @ 0x3
   716  0023                     	ds	1
   717  0024                     ___awdiv@dividend:
   718                           
   719                           ; 2 bytes @ 0x4
   720  0024                     	ds	1
   721  0025                     ___lwmod@dividend:
   722                           
   723                           ; 2 bytes @ 0x5
   724  0025                     	ds	1
   725  0026                     ___awdiv@counter:
   726                           
   727                           ; 1 bytes @ 0x6
   728  0026                     	ds	1
   729  0027                     ??___lwmod:
   730  0027                     ___awdiv@sign:	
   731                           ; 1 bytes @ 0x7
   732                           
   733                           
   734                           ; 1 bytes @ 0x7
   735  0027                     	ds	1
   736  0028                     ___lwmod@counter:
   737  0028                     ___awdiv@quotient:	
   738                           ; 1 bytes @ 0x8
   739                           
   740                           
   741                           ; 2 bytes @ 0x8
   742  0028                     	ds	1
   743  0029                     ?_division:
   744  0029                     ?_sprintf:	
   745                           ; 1 bytes @ 0x9
   746                           
   747  0029                     sprintf@f:	
   748                           ; 2 bytes @ 0x9
   749                           
   750  0029                     division@value:	
   751                           ; 1 bytes @ 0x9
   752                           
   753                           
   754                           ; 2 bytes @ 0x9
   755  0029                     	ds	2
   756  002B                     ??_division:
   757                           
   758                           ; 1 bytes @ 0xB
   759  002B                     	ds	1
   760  002C                     _division$1155:
   761                           
   762                           ; 2 bytes @ 0xC
   763  002C                     	ds	4
   764  0030                     ??_sprintf:
   765                           
   766                           ; 1 bytes @ 0x10
   767  0030                     	ds	3
   768  0033                     sprintf@ap:
   769                           
   770                           ; 1 bytes @ 0x13
   771  0033                     	ds	1
   772  0034                     sprintf@flag:
   773                           
   774                           ; 1 bytes @ 0x14
   775  0034                     	ds	1
   776  0035                     sprintf@prec:
   777                           
   778                           ; 1 bytes @ 0x15
   779  0035                     	ds	1
   780  0036                     sprintf@val:
   781                           
   782                           ; 2 bytes @ 0x16
   783  0036                     	ds	2
   784  0038                     sprintf@sp:
   785                           
   786                           ; 1 bytes @ 0x18
   787  0038                     	ds	1
   788  0039                     sprintf@c:
   789                           
   790                           ; 1 bytes @ 0x19
   791  0039                     	ds	1
   792  003A                     ??_transform:
   793                           
   794                           ; 1 bytes @ 0x1A
   795  003A                     	ds	7
   796  0041                     transform@valor:
   797                           
   798                           ; 1 bytes @ 0x21
   799  0041                     	ds	1
   800  0042                     transform@temp:
   801                           
   802                           ; 2 bytes @ 0x22
   803  0042                     	ds	2
   804  0044                     ??_main:
   805                           
   806                           ; 1 bytes @ 0x24
   807  0044                     	ds	2
   808                           
   809                           	psect	maintext
   810  010F                     __pmaintext:	
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 147 in file "lcd_potes.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B00/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0
   832 ;;      Temps:          0       2       0       0       0
   833 ;;      Totals:         0       2       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels required when called: 6
   836 ;; This function calls:
   837 ;;		_LCD_setCursor
   838 ;;		_LCD_writeString
   839 ;;		_setup
   840 ;;		_transform
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _main
   848  010F                     _main:
   849  010F                     l1875:	
   850                           ;incstack = 0
   851                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   852                           
   853                           
   854                           ;lcd_potes.c: 148:     setup();
   855  010F  120A  118A  24BB  120A  118A  	fcall	_setup
   856  0114                     l1877:
   857                           
   858                           ;lcd_potes.c: 149:     ADCON0bits.GO = 1;
   859  0114  1283               	bcf	3,5	;RP0=0, select bank0
   860  0115  1303               	bcf	3,6	;RP1=0, select bank0
   861  0116  149F               	bsf	31,1	;volatile
   862  0117                     l1879:
   863                           
   864                           ;lcd_potes.c: 152:         if (ADCON0bits.GO == 0){
   865  0117  1283               	bcf	3,5	;RP0=0, select bank0
   866  0118  1303               	bcf	3,6	;RP1=0, select bank0
   867  0119  189F               	btfsc	31,1	;volatile
   868  011A  291C               	goto	u1101
   869  011B  291D               	goto	u1100
   870  011C                     u1101:
   871  011C  2950               	goto	l1905
   872  011D                     u1100:
   873  011D  293E               	goto	l1903
   874  011E                     l1883:
   875                           
   876                           ;lcd_potes.c: 155:                     ADCON0bits.CHS = 0;
   877  011E  30C3               	movlw	-61
   878  011F  059F               	andwf	31,f	;volatile
   879  0120                     l1885:
   880                           
   881                           ;lcd_potes.c: 156:                     _delay((unsigned long)((50)*(4000000/4000000.0)))
      +                          ;
   882  0120  300F               	movlw	15
   883  0121  1283               	bcf	3,5	;RP0=0, select bank0
   884  0122  1303               	bcf	3,6	;RP1=0, select bank0
   885  0123  00C4               	movwf	??_main
   886  0124                     u1117:
   887  0124  0BC4               	decfsz	??_main,f
   888  0125  2924               	goto	u1117
   889  0126  2927               	nop2
   890  0127                     l1887:
   891                           
   892                           ;lcd_potes.c: 157:                     adc_change = 1;
   893  0127  1283               	bcf	3,5	;RP0=0, select bank0
   894  0128  1303               	bcf	3,6	;RP1=0, select bank0
   895  0129  01CB               	clrf	_adc_change
   896  012A  0ACB               	incf	_adc_change,f
   897                           
   898                           ;lcd_potes.c: 158:                     break;
   899  012B  294E               	goto	l115
   900  012C                     l1889:
   901                           
   902                           ;lcd_potes.c: 161:                     ADCON0bits.CHS = 1;
   903  012C  081F               	movf	31,w	;volatile
   904  012D  39C3               	andlw	-61
   905  012E  3804               	iorlw	4
   906  012F  009F               	movwf	31	;volatile
   907  0130                     l1891:
   908                           
   909                           ;lcd_potes.c: 162:                     _delay((unsigned long)((50)*(4000000/4000000.0)))
      +                          ;
   910  0130  300F               	movlw	15
   911  0131  1283               	bcf	3,5	;RP0=0, select bank0
   912  0132  1303               	bcf	3,6	;RP1=0, select bank0
   913  0133  00C4               	movwf	??_main
   914  0134                     u1127:
   915  0134  0BC4               	decfsz	??_main,f
   916  0135  2934               	goto	u1127
   917  0136  2937               	nop2
   918  0137                     l1893:
   919                           
   920                           ;lcd_potes.c: 163:                     adc_change = 0;
   921  0137  1283               	bcf	3,5	;RP0=0, select bank0
   922  0138  1303               	bcf	3,6	;RP1=0, select bank0
   923  0139  01CB               	clrf	_adc_change
   924                           
   925                           ;lcd_potes.c: 164:                     break;
   926  013A  294E               	goto	l115
   927  013B                     l1895:
   928                           
   929                           ;lcd_potes.c: 167:                     ADCON0bits.CHS = 0;
   930  013B  30C3               	movlw	-61
   931  013C  059F               	andwf	31,f	;volatile
   932  013D  2920               	goto	l1885
   933  013E                     l1903:
   934  013E  084B               	movf	_adc_change,w
   935  013F  00C4               	movwf	??_main
   936  0140  01C5               	clrf	??_main+1
   937                           
   938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   939                           ; Switch size 1, requested type "simple"
   940                           ; Number of cases is 1, Range of values is 0 to 0
   941                           ; switch strategies available:
   942                           ; Name         Instructions Cycles
   943                           ; simple_byte            4     3 (average)
   944                           ; direct_byte           11     8 (fixed)
   945                           ; jumptable            260     6 (fixed)
   946                           ;	Chosen strategy is simple_byte
   947  0141  0845               	movf	??_main+1,w
   948  0142  3A00               	xorlw	0	; case 0
   949  0143  1903               	skipnz
   950  0144  2946               	goto	l1983
   951  0145  293B               	goto	l1895
   952  0146                     l1983:
   953                           
   954                           ; Switch size 1, requested type "simple"
   955                           ; Number of cases is 2, Range of values is 0 to 1
   956                           ; switch strategies available:
   957                           ; Name         Instructions Cycles
   958                           ; simple_byte            7     4 (average)
   959                           ; direct_byte           14     8 (fixed)
   960                           ; jumptable            260     6 (fixed)
   961                           ;	Chosen strategy is simple_byte
   962  0146  0844               	movf	??_main,w
   963  0147  3A00               	xorlw	0	; case 0
   964  0148  1903               	skipnz
   965  0149  291E               	goto	l1883
   966  014A  3A01               	xorlw	1	; case 1
   967  014B  1903               	skipnz
   968  014C  292C               	goto	l1889
   969  014D  293B               	goto	l1895
   970  014E                     l115:
   971                           
   972                           ;lcd_potes.c: 173:             ADCON0bits.GO = 1;
   973  014E  149F               	bsf	31,1	;volatile
   974                           
   975                           ;lcd_potes.c: 174:             PIR1bits.ADIF = 0;
   976  014F  130C               	bcf	12,6	;volatile
   977  0150                     l1905:
   978                           
   979                           ;lcd_potes.c: 178:         LCD_setCursor(2, 1);
   980  0150  01F6               	clrf	LCD_setCursor@columna
   981  0151  0AF6               	incf	LCD_setCursor@columna,f
   982  0152  3002               	movlw	2
   983  0153  120A  118A  2434  120A  118A  	fcall	_LCD_setCursor
   984  0158                     l1907:
   985                           
   986                           ;lcd_potes.c: 179:         transform(pote1);
   987  0158  1283               	bcf	3,5	;RP0=0, select bank0
   988  0159  1303               	bcf	3,6	;RP1=0, select bank0
   989  015A  084D               	movf	_pote1,w
   990  015B  120A  118A  2257  120A  118A  	fcall	_transform
   991  0160                     l1909:
   992                           
   993                           ;lcd_potes.c: 180:         LCD_writeString(buffer);
   994  0160  304E               	movlw	(low (_buffer| 0))& (0+255)
   995  0161  00F6               	movwf	LCD_writeString@text
   996  0162  3000               	movlw	0
   997  0163  00F7               	movwf	LCD_writeString@text+1
   998  0164  120A  118A  233C  120A  118A  	fcall	_LCD_writeString
   999  0169                     l1911:
  1000                           
  1001                           ;lcd_potes.c: 181:         LCD_writeString("V ");
  1002  0169  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1003  016A  00F6               	movwf	LCD_writeString@text
  1004  016B  3080               	movlw	128
  1005  016C  00F7               	movwf	LCD_writeString@text+1
  1006  016D  120A  118A  233C  120A  118A  	fcall	_LCD_writeString
  1007  0172                     l1913:
  1008                           
  1009                           ;lcd_potes.c: 183:         transform(pote2);
  1010  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0174  084C               	movf	_pote2,w
  1013  0175  120A  118A  2257  120A  118A  	fcall	_transform
  1014  017A                     l1915:
  1015                           
  1016                           ;lcd_potes.c: 184:         LCD_writeString(buffer);
  1017  017A  304E               	movlw	(low (_buffer| 0))& (0+255)
  1018  017B  00F6               	movwf	LCD_writeString@text
  1019  017C  3000               	movlw	0
  1020  017D  00F7               	movwf	LCD_writeString@text+1
  1021  017E  120A  118A  233C  120A  118A  	fcall	_LCD_writeString
  1022  0183                     l1917:
  1023                           
  1024                           ;lcd_potes.c: 185:         LCD_writeString("V ");
  1025  0183  3022               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1026  0184  00F6               	movwf	LCD_writeString@text
  1027  0185  3080               	movlw	128
  1028  0186  00F7               	movwf	LCD_writeString@text+1
  1029  0187  120A  118A  233C  120A  118A  	fcall	_LCD_writeString
  1030  018C  2917               	goto	l1879
  1031  018D  120A  118A  280C   	ljmp	start
  1032  0190                     __end_of_main:
  1033                           
  1034                           	psect	text1
  1035  0257                     __ptext1:	
  1036 ;; *************** function _transform *****************
  1037 ;; Defined at:
  1038 ;;		line 134 in file "lcd_potes.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  valor           1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  valor           1   33[BANK0 ] unsigned char 
  1043 ;;  temp            2   34[BANK0 ] unsigned int 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       3       0       0       0
  1055 ;;      Temps:          0       7       0       0       0
  1056 ;;      Totals:         0      10       0       0       0
  1057 ;;Total ram usage:       10 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 3
  1060 ;; This function calls:
  1061 ;;		___awdiv
  1062 ;;		___wmul
  1063 ;;		_division
  1064 ;;		_sprintf
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _transform
  1072  0257                     _transform:
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _transform: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1076                           ;transform@valor stored from wreg
  1077  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0259  00C1               	movwf	transform@valor
  1080  025A                     l1871:
  1081                           
  1082                           ;lcd_potes.c: 135:     uint16_t temp;;lcd_potes.c: 136:     temp = valor*100/51;
  1083  025A  3033               	movlw	51
  1084  025B  00A2               	movwf	___awdiv@divisor
  1085  025C  3000               	movlw	0
  1086  025D  00A3               	movwf	___awdiv@divisor+1
  1087  025E  0841               	movf	transform@valor,w
  1088  025F  00BA               	movwf	??_transform
  1089  0260  01BB               	clrf	??_transform+1
  1090  0261  083A               	movf	??_transform,w
  1091  0262  00F3               	movwf	___wmul@multiplier
  1092  0263  083B               	movf	??_transform+1,w
  1093  0264  00F4               	movwf	___wmul@multiplier+1
  1094  0265  3064               	movlw	100
  1095  0266  00F5               	movwf	___wmul@multiplicand
  1096  0267  3000               	movlw	0
  1097  0268  00F6               	movwf	___wmul@multiplicand+1
  1098  0269  120A  118A  2467  120A  118A  	fcall	___wmul
  1099  026E  0874               	movf	?___wmul+1,w
  1100  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1101  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1102  0271  00A5               	movwf	___awdiv@dividend+1
  1103  0272  0873               	movf	?___wmul,w
  1104  0273  00A4               	movwf	___awdiv@dividend
  1105  0274  120A  118A  2190  120A  118A  	fcall	___awdiv
  1106  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1107  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1108  027B  0823               	movf	?___awdiv+1,w
  1109  027C  00C3               	movwf	transform@temp+1
  1110  027D  0822               	movf	?___awdiv,w
  1111  027E  00C2               	movwf	transform@temp
  1112                           
  1113                           ;lcd_potes.c: 137:     division(temp);
  1114  027F  0843               	movf	transform@temp+1,w
  1115  0280  00AA               	movwf	division@value+1
  1116  0281  0842               	movf	transform@temp,w
  1117  0282  00A9               	movwf	division@value
  1118  0283  120A  118A  21F9  120A  118A  	fcall	_division
  1119  0288                     l1873:
  1120                           
  1121                           ;lcd_potes.c: 138:     sprintf(buffer, "%d.%d%d", cen, dec, uni);
  1122  0288  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1123  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1124  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1125  028B  00BA               	movwf	??_transform
  1126  028C  083A               	movf	??_transform,w
  1127  028D  00A9               	movwf	sprintf@f
  1128  028E  084A               	movf	_cen,w
  1129  028F  00BB               	movwf	??_transform+1
  1130  0290  01BC               	clrf	??_transform+2
  1131  0291  083B               	movf	??_transform+1,w
  1132  0292  00AA               	movwf	?_sprintf+1
  1133  0293  083C               	movf	??_transform+2,w
  1134  0294  00AB               	movwf	?_sprintf+2
  1135  0295  0849               	movf	_dec,w
  1136  0296  00BD               	movwf	??_transform+3
  1137  0297  01BE               	clrf	??_transform+4
  1138  0298  083D               	movf	??_transform+3,w
  1139  0299  00AC               	movwf	?_sprintf+3
  1140  029A  083E               	movf	??_transform+4,w
  1141  029B  00AD               	movwf	?_sprintf+4
  1142  029C  0848               	movf	_uni,w
  1143  029D  00BF               	movwf	??_transform+5
  1144  029E  01C0               	clrf	??_transform+6
  1145  029F  083F               	movf	??_transform+5,w
  1146  02A0  00AE               	movwf	?_sprintf+5
  1147  02A1  0840               	movf	??_transform+6,w
  1148  02A2  00AF               	movwf	?_sprintf+6
  1149  02A3  304E               	movlw	(low (_buffer| 0))& (0+255)
  1150  02A4  120A  118A  2025  120A  118A  	fcall	_sprintf
  1151  02A9                     l106:
  1152  02A9  0008               	return
  1153  02AA                     __end_of_transform:
  1154                           
  1155                           	psect	text2
  1156  0025                     __ptext2:	
  1157 ;; *************** function _sprintf *****************
  1158 ;; Defined at:
  1159 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  sp              1    wreg     PTR unsigned char 
  1162 ;;		 -> buffer(5), 
  1163 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  1164 ;;		 -> STR_1(8), 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  sp              1   24[BANK0 ] PTR unsigned char 
  1167 ;;		 -> buffer(5), 
  1168 ;;  tmpval          4    0        struct .
  1169 ;;  val             2   22[BANK0 ] unsigned int 
  1170 ;;  cp              2    0        PTR const unsigned char 
  1171 ;;  len             2    0        unsigned int 
  1172 ;;  c               1   25[BANK0 ] unsigned char 
  1173 ;;  prec            1   21[BANK0 ] char 
  1174 ;;  flag            1   20[BANK0 ] unsigned char 
  1175 ;;  ap              1   19[BANK0 ] PTR void [1]
  1176 ;;		 -> ?_sprintf(2), 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2    9[BANK0 ] int 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         0       7       0       0       0
  1187 ;;      Locals:         0       7       0       0       0
  1188 ;;      Temps:          0       3       0       0       0
  1189 ;;      Totals:         0      17       0       0       0
  1190 ;;Total ram usage:       17 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 2
  1193 ;; This function calls:
  1194 ;;		___lwdiv
  1195 ;;		___lwmod
  1196 ;; This function is called by:
  1197 ;;		_transform
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _sprintf
  1203  0025                     _sprintf:
  1204                           
  1205                           ;incstack = 0
  1206                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1207                           ;sprintf@sp stored from wreg
  1208  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0027  00B8               	movwf	sprintf@sp
  1211  0028                     l1783:
  1212                           
  1213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1214  0028  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1215  0029  00B0               	movwf	??_sprintf
  1216  002A  0830               	movf	??_sprintf,w
  1217  002B  00B3               	movwf	sprintf@ap
  1218                           
  1219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1220  002C  28F8               	goto	l1835
  1221  002D                     l1785:
  1222                           
  1223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1224  002D  3025               	movlw	37
  1225  002E  0639               	xorwf	sprintf@c,w
  1226  002F  1903               	btfsc	3,2
  1227  0030  2832               	goto	u991
  1228  0031  2833               	goto	u990
  1229  0032                     u991:
  1230  0032  283F               	goto	l1791
  1231  0033                     u990:
  1232  0033                     l1787:
  1233                           
  1234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1235  0033  0839               	movf	sprintf@c,w
  1236  0034  00B0               	movwf	??_sprintf
  1237  0035  0838               	movf	sprintf@sp,w
  1238  0036  0084               	movwf	4
  1239  0037  0830               	movf	??_sprintf,w
  1240  0038  1383               	bcf	3,7	;select IRP bank0
  1241  0039  0080               	movwf	0
  1242  003A                     l1789:
  1243  003A  3001               	movlw	1
  1244  003B  00B0               	movwf	??_sprintf
  1245  003C  0830               	movf	??_sprintf,w
  1246  003D  07B8               	addwf	sprintf@sp,f
  1247                           
  1248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1249  003E  28F8               	goto	l1835
  1250  003F                     l1791:
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1253  003F  01B4               	clrf	sprintf@flag
  1254  0040                     l1795:	
  1255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1256                           
  1257  0040  3001               	movlw	1
  1258  0041  07A9               	addwf	sprintf@f,f
  1259  0042  30FF               	movlw	-1
  1260  0043  0729               	addwf	sprintf@f,w
  1261  0044  0084               	movwf	4
  1262  0045  120A  118A  240A  120A  118A  	fcall	stringdir
  1263  004A  00B9               	movwf	sprintf@c
  1264  004B  00B0               	movwf	??_sprintf
  1265  004C  01B1               	clrf	??_sprintf+1
  1266                           
  1267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1268                           ; Switch size 1, requested type "simple"
  1269                           ; Number of cases is 1, Range of values is 0 to 0
  1270                           ; switch strategies available:
  1271                           ; Name         Instructions Cycles
  1272                           ; simple_byte            4     3 (average)
  1273                           ; direct_byte           11     8 (fixed)
  1274                           ; jumptable            260     6 (fixed)
  1275                           ;	Chosen strategy is simple_byte
  1276  004D  0831               	movf	??_sprintf+1,w
  1277  004E  3A00               	xorlw	0	; case 0
  1278  004F  1903               	skipnz
  1279  0050  2852               	goto	l1985
  1280  0051  28F8               	goto	l1835
  1281  0052                     l1985:
  1282                           
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 3, Range of values is 0 to 105
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte           10     6 (average)
  1288                           ; jumptable            260     6 (fixed)
  1289                           ;	Chosen strategy is simple_byte
  1290  0052  0830               	movf	??_sprintf,w
  1291  0053  3A00               	xorlw	0	; case 0
  1292  0054  1903               	skipnz
  1293  0055  290A               	goto	l1837
  1294  0056  3A64               	xorlw	100	; case 100
  1295  0057  1903               	skipnz
  1296  0058  285D               	goto	l1797
  1297  0059  3A0D               	xorlw	13	; case 105
  1298  005A  1903               	skipnz
  1299  005B  285D               	goto	l1797
  1300  005C  28F8               	goto	l1835
  1301  005D                     l1797:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1304  005D  0833               	movf	sprintf@ap,w
  1305  005E  0084               	movwf	4
  1306  005F  1383               	bcf	3,7	;select IRP bank0
  1307  0060  0800               	movf	0,w
  1308  0061  00B6               	movwf	sprintf@val
  1309  0062  0A84               	incf	4,f
  1310  0063  0800               	movf	0,w
  1311  0064  00B7               	movwf	sprintf@val+1
  1312  0065                     l1799:
  1313  0065  3002               	movlw	2
  1314  0066  00B0               	movwf	??_sprintf
  1315  0067  0830               	movf	??_sprintf,w
  1316  0068  07B3               	addwf	sprintf@ap,f
  1317  0069                     l1801:
  1318                           
  1319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1320  0069  1FB7               	btfss	sprintf@val+1,7
  1321  006A  286C               	goto	u1001
  1322  006B  286D               	goto	u1000
  1323  006C                     u1001:
  1324  006C  2876               	goto	l1807
  1325  006D                     u1000:
  1326  006D                     l1803:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1329  006D  3003               	movlw	3
  1330  006E  00B0               	movwf	??_sprintf
  1331  006F  0830               	movf	??_sprintf,w
  1332  0070  04B4               	iorwf	sprintf@flag,f
  1333  0071                     l1805:
  1334                           
  1335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1336  0071  09B6               	comf	sprintf@val,f
  1337  0072  09B7               	comf	sprintf@val+1,f
  1338  0073  0AB6               	incf	sprintf@val,f
  1339  0074  1903               	skipnz
  1340  0075  0AB7               	incf	sprintf@val+1,f
  1341  0076                     l1807:
  1342                           
  1343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1344  0076  01B9               	clrf	sprintf@c
  1345  0077  0AB9               	incf	sprintf@c,f
  1346  0078                     l1813:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1349  0078  0839               	movf	sprintf@c,w
  1350  0079  00B0               	movwf	??_sprintf
  1351  007A  0730               	addwf	??_sprintf,w
  1352  007B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1353  007C  0084               	movwf	4
  1354  007D  120A  118A  240A  120A  118A  	fcall	stringdir
  1355  0082  00B1               	movwf	??_sprintf+1
  1356  0083  120A  118A  240A  120A  118A  	fcall	stringdir
  1357  0088  00B2               	movwf	??_sprintf+2
  1358  0089  0832               	movf	??_sprintf+2,w
  1359  008A  0237               	subwf	sprintf@val+1,w
  1360  008B  1D03               	skipz
  1361  008C  288F               	goto	u1015
  1362  008D  0831               	movf	??_sprintf+1,w
  1363  008E  0236               	subwf	sprintf@val,w
  1364  008F                     u1015:
  1365  008F  1803               	skipnc
  1366  0090  2892               	goto	u1011
  1367  0091  2893               	goto	u1010
  1368  0092                     u1011:
  1369  0092  2894               	goto	l1817
  1370  0093                     u1010:
  1371  0093  289E               	goto	l1819
  1372  0094                     l1817:
  1373  0094  3001               	movlw	1
  1374  0095  00B0               	movwf	??_sprintf
  1375  0096  0830               	movf	??_sprintf,w
  1376  0097  07B9               	addwf	sprintf@c,f
  1377  0098  3005               	movlw	5
  1378  0099  0639               	xorwf	sprintf@c,w
  1379  009A  1D03               	btfss	3,2
  1380  009B  289D               	goto	u1021
  1381  009C  289E               	goto	u1020
  1382  009D                     u1021:
  1383  009D  2878               	goto	l1813
  1384  009E                     u1020:
  1385  009E                     l1819:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1388  009E  0834               	movf	sprintf@flag,w
  1389  009F  3903               	andlw	3
  1390  00A0  1903               	btfsc	3,2
  1391  00A1  28A3               	goto	u1031
  1392  00A2  28A4               	goto	u1030
  1393  00A3                     u1031:
  1394  00A3  28AF               	goto	l1825
  1395  00A4                     u1030:
  1396  00A4                     l1821:
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1399  00A4  302D               	movlw	45
  1400  00A5  00B0               	movwf	??_sprintf
  1401  00A6  0838               	movf	sprintf@sp,w
  1402  00A7  0084               	movwf	4
  1403  00A8  0830               	movf	??_sprintf,w
  1404  00A9  1383               	bcf	3,7	;select IRP bank0
  1405  00AA  0080               	movwf	0
  1406  00AB                     l1823:
  1407  00AB  3001               	movlw	1
  1408  00AC  00B0               	movwf	??_sprintf
  1409  00AD  0830               	movf	??_sprintf,w
  1410  00AE  07B8               	addwf	sprintf@sp,f
  1411  00AF                     l1825:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1414  00AF  0839               	movf	sprintf@c,w
  1415  00B0  00B0               	movwf	??_sprintf
  1416  00B1  0830               	movf	??_sprintf,w
  1417  00B2  00B5               	movwf	sprintf@prec
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1420  00B3  28EF               	goto	l1833
  1421  00B4                     l1827:
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1424  00B4  300A               	movlw	10
  1425  00B5  00A3               	movwf	___lwmod@divisor
  1426  00B6  3000               	movlw	0
  1427  00B7  00A4               	movwf	___lwmod@divisor+1
  1428  00B8  0835               	movf	sprintf@prec,w
  1429  00B9  00B0               	movwf	??_sprintf
  1430  00BA  0730               	addwf	??_sprintf,w
  1431  00BB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1432  00BC  0084               	movwf	4
  1433  00BD  120A  118A  240A  120A  118A  	fcall	stringdir
  1434  00C2  00F3               	movwf	___lwdiv@divisor
  1435  00C3  120A  118A  240A  120A  118A  	fcall	stringdir
  1436  00C8  00F4               	movwf	___lwdiv@divisor+1
  1437  00C9  0837               	movf	sprintf@val+1,w
  1438  00CA  00F6               	movwf	___lwdiv@dividend+1
  1439  00CB  0836               	movf	sprintf@val,w
  1440  00CC  00F5               	movwf	___lwdiv@dividend
  1441  00CD  120A  118A  22F6  120A  118A  	fcall	___lwdiv
  1442  00D2  0874               	movf	?___lwdiv+1,w
  1443  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1444  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1445  00D5  00A6               	movwf	___lwmod@dividend+1
  1446  00D6  0873               	movf	?___lwdiv,w
  1447  00D7  00A5               	movwf	___lwmod@dividend
  1448  00D8  120A  118A  2382  120A  118A  	fcall	___lwmod
  1449  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1450  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1451  00DF  0823               	movf	?___lwmod,w
  1452  00E0  3E30               	addlw	48
  1453  00E1  00B1               	movwf	??_sprintf+1
  1454  00E2  0831               	movf	??_sprintf+1,w
  1455  00E3  00B9               	movwf	sprintf@c
  1456  00E4                     l1829:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1459  00E4  0839               	movf	sprintf@c,w
  1460  00E5  00B0               	movwf	??_sprintf
  1461  00E6  0838               	movf	sprintf@sp,w
  1462  00E7  0084               	movwf	4
  1463  00E8  0830               	movf	??_sprintf,w
  1464  00E9  1383               	bcf	3,7	;select IRP bank0
  1465  00EA  0080               	movwf	0
  1466  00EB                     l1831:
  1467  00EB  3001               	movlw	1
  1468  00EC  00B0               	movwf	??_sprintf
  1469  00ED  0830               	movf	??_sprintf,w
  1470  00EE  07B8               	addwf	sprintf@sp,f
  1471  00EF                     l1833:
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1474  00EF  30FF               	movlw	255
  1475  00F0  00B0               	movwf	??_sprintf
  1476  00F1  0830               	movf	??_sprintf,w
  1477  00F2  07B5               	addwf	sprintf@prec,f
  1478  00F3  0A35               	incf	sprintf@prec,w
  1479  00F4  1D03               	btfss	3,2
  1480  00F5  28F7               	goto	u1041
  1481  00F6  28F8               	goto	u1040
  1482  00F7                     u1041:
  1483  00F7  28B4               	goto	l1827
  1484  00F8                     u1040:
  1485  00F8                     l1835:
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1488  00F8  3001               	movlw	1
  1489  00F9  07A9               	addwf	sprintf@f,f
  1490  00FA  30FF               	movlw	-1
  1491  00FB  0729               	addwf	sprintf@f,w
  1492  00FC  0084               	movwf	4
  1493  00FD  120A  118A  240A  120A  118A  	fcall	stringdir
  1494  0102  00B0               	movwf	??_sprintf
  1495  0103  0830               	movf	??_sprintf,w
  1496  0104  00B9               	movwf	sprintf@c
  1497  0105  0839               	movf	sprintf@c,w
  1498  0106  1D03               	btfss	3,2
  1499  0107  2909               	goto	u1051
  1500  0108  290A               	goto	u1050
  1501  0109                     u1051:
  1502  0109  282D               	goto	l1785
  1503  010A                     u1050:
  1504  010A                     l1837:
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1507  010A  0838               	movf	sprintf@sp,w
  1508  010B  0084               	movwf	4
  1509  010C  1383               	bcf	3,7	;select IRP bank0
  1510  010D  0180               	clrf	0
  1511  010E                     l299:
  1512  010E  0008               	return
  1513  010F                     __end_of_sprintf:
  1514                           
  1515                           	psect	text3
  1516  01F9                     __ptext3:	
  1517 ;; *************** function _division *****************
  1518 ;; Defined at:
  1519 ;;		line 128 in file "lcd_potes.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  value           2    9[BANK0 ] unsigned int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0, pclath, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       2       0       0       0
  1534 ;;      Locals:         0       2       0       0       0
  1535 ;;      Temps:          0       1       0       0       0
  1536 ;;      Totals:         0       5       0       0       0
  1537 ;;Total ram usage:        5 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; Hardware stack levels required when called: 2
  1540 ;; This function calls:
  1541 ;;		___lwdiv
  1542 ;;		___lwmod
  1543 ;; This function is called by:
  1544 ;;		_transform
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _division
  1550  01F9                     _division:
  1551  01F9                     l1781:	
  1552                           ;incstack = 0
  1553                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1554                           
  1555                           
  1556                           ;lcd_potes.c: 129:     cen = value/100;
  1557  01F9  3064               	movlw	100
  1558  01FA  00F3               	movwf	___lwdiv@divisor
  1559  01FB  3000               	movlw	0
  1560  01FC  00F4               	movwf	___lwdiv@divisor+1
  1561  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1562  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1563  01FF  082A               	movf	division@value+1,w
  1564  0200  00F6               	movwf	___lwdiv@dividend+1
  1565  0201  0829               	movf	division@value,w
  1566  0202  00F5               	movwf	___lwdiv@dividend
  1567  0203  120A  118A  22F6  120A  118A  	fcall	___lwdiv
  1568  0208  0873               	movf	?___lwdiv,w
  1569  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1570  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1571  020B  00AB               	movwf	??_division
  1572  020C  082B               	movf	??_division,w
  1573  020D  00CA               	movwf	_cen
  1574                           
  1575                           ;lcd_potes.c: 130:     dec = (value%100)/10;
  1576  020E  300A               	movlw	10
  1577  020F  00F3               	movwf	___lwdiv@divisor
  1578  0210  3000               	movlw	0
  1579  0211  00F4               	movwf	___lwdiv@divisor+1
  1580  0212  082A               	movf	division@value+1,w
  1581  0213  00A6               	movwf	___lwmod@dividend+1
  1582  0214  0829               	movf	division@value,w
  1583  0215  00A5               	movwf	___lwmod@dividend
  1584  0216  3064               	movlw	100
  1585  0217  00A3               	movwf	___lwmod@divisor
  1586  0218  3000               	movlw	0
  1587  0219  00A4               	movwf	___lwmod@divisor+1
  1588  021A  120A  118A  2382  120A  118A  	fcall	___lwmod
  1589  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0221  0824               	movf	?___lwmod+1,w
  1592  0222  00F6               	movwf	___lwdiv@dividend+1
  1593  0223  0823               	movf	?___lwmod,w
  1594  0224  00F5               	movwf	___lwdiv@dividend
  1595  0225  120A  118A  22F6  120A  118A  	fcall	___lwdiv
  1596  022A  0873               	movf	?___lwdiv,w
  1597  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1598  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1599  022D  00AB               	movwf	??_division
  1600  022E  082B               	movf	??_division,w
  1601  022F  00C9               	movwf	_dec
  1602                           
  1603                           ;lcd_potes.c: 131:     uni = (value%100)%10;
  1604  0230  082A               	movf	division@value+1,w
  1605  0231  00A6               	movwf	___lwmod@dividend+1
  1606  0232  0829               	movf	division@value,w
  1607  0233  00A5               	movwf	___lwmod@dividend
  1608  0234  3064               	movlw	100
  1609  0235  00A3               	movwf	___lwmod@divisor
  1610  0236  3000               	movlw	0
  1611  0237  00A4               	movwf	___lwmod@divisor+1
  1612  0238  120A  118A  2382  120A  118A  	fcall	___lwmod
  1613  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1614  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1615  023F  0824               	movf	?___lwmod+1,w
  1616  0240  00AD               	movwf	_division$1155+1
  1617  0241  0823               	movf	?___lwmod,w
  1618  0242  00AC               	movwf	_division$1155
  1619                           
  1620                           ;lcd_potes.c: 131:     uni = (value%100)%10;
  1621  0243  300A               	movlw	10
  1622  0244  00A3               	movwf	___lwmod@divisor
  1623  0245  3000               	movlw	0
  1624  0246  00A4               	movwf	___lwmod@divisor+1
  1625  0247  082D               	movf	_division$1155+1,w
  1626  0248  00A6               	movwf	___lwmod@dividend+1
  1627  0249  082C               	movf	_division$1155,w
  1628  024A  00A5               	movwf	___lwmod@dividend
  1629  024B  120A  118A  2382  120A  118A  	fcall	___lwmod
  1630  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1632  0252  0823               	movf	?___lwmod,w
  1633  0253  00AB               	movwf	??_division
  1634  0254  082B               	movf	??_division,w
  1635  0255  00C8               	movwf	_uni
  1636  0256                     l103:
  1637  0256  0008               	return
  1638  0257                     __end_of_division:
  1639                           
  1640                           	psect	text4
  1641  0382                     __ptext4:	
  1642 ;; *************** function ___lwmod *****************
  1643 ;; Defined at:
  1644 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  divisor         2    3[BANK0 ] unsigned int 
  1647 ;;  dividend        2    5[BANK0 ] unsigned int 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  counter         1    8[BANK0 ] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  2    3[BANK0 ] unsigned int 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       4       0       0       0
  1660 ;;      Locals:         0       1       0       0       0
  1661 ;;      Temps:          0       1       0       0       0
  1662 ;;      Totals:         0       6       0       0       0
  1663 ;;Total ram usage:        6 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 1
  1666 ;; This function calls:
  1667 ;;		Nothing
  1668 ;; This function is called by:
  1669 ;;		_division
  1670 ;;		_sprintf
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function ___lwmod
  1676  0382                     ___lwmod:
  1677  0382                     l1389:	
  1678                           ;incstack = 0
  1679                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1680                           
  1681  0382  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0383  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0384  0823               	movf	___lwmod@divisor,w
  1684  0385  0424               	iorwf	___lwmod@divisor+1,w
  1685  0386  1903               	btfsc	3,2
  1686  0387  2B89               	goto	u581
  1687  0388  2B8A               	goto	u580
  1688  0389                     u581:
  1689  0389  2BB9               	goto	l1407
  1690  038A                     u580:
  1691  038A                     l1391:
  1692  038A  01A8               	clrf	___lwmod@counter
  1693  038B  0AA8               	incf	___lwmod@counter,f
  1694  038C  2B98               	goto	l1397
  1695  038D                     l1393:
  1696  038D  3001               	movlw	1
  1697  038E                     u595:
  1698  038E  1003               	clrc
  1699  038F  0DA3               	rlf	___lwmod@divisor,f
  1700  0390  0DA4               	rlf	___lwmod@divisor+1,f
  1701  0391  3EFF               	addlw	-1
  1702  0392  1D03               	skipz
  1703  0393  2B8E               	goto	u595
  1704  0394                     l1395:
  1705  0394  3001               	movlw	1
  1706  0395  00A7               	movwf	??___lwmod
  1707  0396  0827               	movf	??___lwmod,w
  1708  0397  07A8               	addwf	___lwmod@counter,f
  1709  0398                     l1397:
  1710  0398  1FA4               	btfss	___lwmod@divisor+1,7
  1711  0399  2B9B               	goto	u601
  1712  039A  2B9C               	goto	u600
  1713  039B                     u601:
  1714  039B  2B8D               	goto	l1393
  1715  039C                     u600:
  1716  039C                     l1399:
  1717  039C  0824               	movf	___lwmod@divisor+1,w
  1718  039D  0226               	subwf	___lwmod@dividend+1,w
  1719  039E  1D03               	skipz
  1720  039F  2BA2               	goto	u615
  1721  03A0  0823               	movf	___lwmod@divisor,w
  1722  03A1  0225               	subwf	___lwmod@dividend,w
  1723  03A2                     u615:
  1724  03A2  1C03               	skipc
  1725  03A3  2BA5               	goto	u611
  1726  03A4  2BA6               	goto	u610
  1727  03A5                     u611:
  1728  03A5  2BAC               	goto	l1403
  1729  03A6                     u610:
  1730  03A6                     l1401:
  1731  03A6  0823               	movf	___lwmod@divisor,w
  1732  03A7  02A5               	subwf	___lwmod@dividend,f
  1733  03A8  0824               	movf	___lwmod@divisor+1,w
  1734  03A9  1C03               	skipc
  1735  03AA  03A6               	decf	___lwmod@dividend+1,f
  1736  03AB  02A6               	subwf	___lwmod@dividend+1,f
  1737  03AC                     l1403:
  1738  03AC  3001               	movlw	1
  1739  03AD                     u625:
  1740  03AD  1003               	clrc
  1741  03AE  0CA4               	rrf	___lwmod@divisor+1,f
  1742  03AF  0CA3               	rrf	___lwmod@divisor,f
  1743  03B0  3EFF               	addlw	-1
  1744  03B1  1D03               	skipz
  1745  03B2  2BAD               	goto	u625
  1746  03B3                     l1405:
  1747  03B3  3001               	movlw	1
  1748  03B4  02A8               	subwf	___lwmod@counter,f
  1749  03B5  1D03               	btfss	3,2
  1750  03B6  2BB8               	goto	u631
  1751  03B7  2BB9               	goto	u630
  1752  03B8                     u631:
  1753  03B8  2B9C               	goto	l1399
  1754  03B9                     u630:
  1755  03B9                     l1407:
  1756  03B9  0826               	movf	___lwmod@dividend+1,w
  1757  03BA  00A4               	movwf	?___lwmod+1
  1758  03BB  0825               	movf	___lwmod@dividend,w
  1759  03BC  00A3               	movwf	?___lwmod
  1760  03BD                     l585:
  1761  03BD  0008               	return
  1762  03BE                     __end_of___lwmod:
  1763                           
  1764                           	psect	text5
  1765  02F6                     __ptext5:	
  1766 ;; *************** function ___lwdiv *****************
  1767 ;; Defined at:
  1768 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  divisor         2    3[COMMON] unsigned int 
  1771 ;;  dividend        2    5[COMMON] unsigned int 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  quotient        2    1[BANK0 ] unsigned int 
  1774 ;;  counter         1    0[BANK0 ] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  2    3[COMMON] unsigned int 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1784 ;;      Params:         4       0       0       0       0
  1785 ;;      Locals:         0       3       0       0       0
  1786 ;;      Temps:          1       0       0       0       0
  1787 ;;      Totals:         5       3       0       0       0
  1788 ;;Total ram usage:        8 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 1
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_division
  1795 ;;		_sprintf
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function ___lwdiv
  1801  02F6                     ___lwdiv:
  1802  02F6                     l1749:	
  1803                           ;incstack = 0
  1804                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1805                           
  1806  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1807  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1808  02F8  01A1               	clrf	___lwdiv@quotient
  1809  02F9  01A2               	clrf	___lwdiv@quotient+1
  1810  02FA                     l1751:
  1811  02FA  0873               	movf	___lwdiv@divisor,w
  1812  02FB  0474               	iorwf	___lwdiv@divisor+1,w
  1813  02FC  1903               	btfsc	3,2
  1814  02FD  2AFF               	goto	u921
  1815  02FE  2B00               	goto	u920
  1816  02FF                     u921:
  1817  02FF  2B37               	goto	l1771
  1818  0300                     u920:
  1819  0300                     l1753:
  1820  0300  01A0               	clrf	___lwdiv@counter
  1821  0301  0AA0               	incf	___lwdiv@counter,f
  1822  0302  2B0E               	goto	l1759
  1823  0303                     l1755:
  1824  0303  3001               	movlw	1
  1825  0304                     u935:
  1826  0304  1003               	clrc
  1827  0305  0DF3               	rlf	___lwdiv@divisor,f
  1828  0306  0DF4               	rlf	___lwdiv@divisor+1,f
  1829  0307  3EFF               	addlw	-1
  1830  0308  1D03               	skipz
  1831  0309  2B04               	goto	u935
  1832  030A                     l1757:
  1833  030A  3001               	movlw	1
  1834  030B  00F7               	movwf	??___lwdiv
  1835  030C  0877               	movf	??___lwdiv,w
  1836  030D  07A0               	addwf	___lwdiv@counter,f
  1837  030E                     l1759:
  1838  030E  1FF4               	btfss	___lwdiv@divisor+1,7
  1839  030F  2B11               	goto	u941
  1840  0310  2B12               	goto	u940
  1841  0311                     u941:
  1842  0311  2B03               	goto	l1755
  1843  0312                     u940:
  1844  0312                     l1761:
  1845  0312  3001               	movlw	1
  1846  0313                     u955:
  1847  0313  1003               	clrc
  1848  0314  0DA1               	rlf	___lwdiv@quotient,f
  1849  0315  0DA2               	rlf	___lwdiv@quotient+1,f
  1850  0316  3EFF               	addlw	-1
  1851  0317  1D03               	skipz
  1852  0318  2B13               	goto	u955
  1853  0319  0874               	movf	___lwdiv@divisor+1,w
  1854  031A  0276               	subwf	___lwdiv@dividend+1,w
  1855  031B  1D03               	skipz
  1856  031C  2B1F               	goto	u965
  1857  031D  0873               	movf	___lwdiv@divisor,w
  1858  031E  0275               	subwf	___lwdiv@dividend,w
  1859  031F                     u965:
  1860  031F  1C03               	skipc
  1861  0320  2B22               	goto	u961
  1862  0321  2B23               	goto	u960
  1863  0322                     u961:
  1864  0322  2B2A               	goto	l1767
  1865  0323                     u960:
  1866  0323                     l1763:
  1867  0323  0873               	movf	___lwdiv@divisor,w
  1868  0324  02F5               	subwf	___lwdiv@dividend,f
  1869  0325  0874               	movf	___lwdiv@divisor+1,w
  1870  0326  1C03               	skipc
  1871  0327  03F6               	decf	___lwdiv@dividend+1,f
  1872  0328  02F6               	subwf	___lwdiv@dividend+1,f
  1873  0329                     l1765:
  1874  0329  1421               	bsf	___lwdiv@quotient,0
  1875  032A                     l1767:
  1876  032A  3001               	movlw	1
  1877  032B                     u975:
  1878  032B  1003               	clrc
  1879  032C  0CF4               	rrf	___lwdiv@divisor+1,f
  1880  032D  0CF3               	rrf	___lwdiv@divisor,f
  1881  032E  3EFF               	addlw	-1
  1882  032F  1D03               	skipz
  1883  0330  2B2B               	goto	u975
  1884  0331                     l1769:
  1885  0331  3001               	movlw	1
  1886  0332  02A0               	subwf	___lwdiv@counter,f
  1887  0333  1D03               	btfss	3,2
  1888  0334  2B36               	goto	u981
  1889  0335  2B37               	goto	u980
  1890  0336                     u981:
  1891  0336  2B12               	goto	l1761
  1892  0337                     u980:
  1893  0337                     l1771:
  1894  0337  0822               	movf	___lwdiv@quotient+1,w
  1895  0338  00F4               	movwf	?___lwdiv+1
  1896  0339  0821               	movf	___lwdiv@quotient,w
  1897  033A  00F3               	movwf	?___lwdiv
  1898  033B                     l575:
  1899  033B  0008               	return
  1900  033C                     __end_of___lwdiv:
  1901                           
  1902                           	psect	text6
  1903  0467                     __ptext6:	
  1904 ;; *************** function ___wmul *****************
  1905 ;; Defined at:
  1906 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  multiplier      2    3[COMMON] unsigned int 
  1909 ;;  multiplicand    2    5[COMMON] unsigned int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  product         2    0[BANK0 ] unsigned int 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2    3[COMMON] unsigned int 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         4       0       0       0       0
  1922 ;;      Locals:         0       2       0       0       0
  1923 ;;      Temps:          0       0       0       0       0
  1924 ;;      Totals:         4       2       0       0       0
  1925 ;;Total ram usage:        6 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_transform
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function ___wmul
  1937  0467                     ___wmul:
  1938  0467                     l1845:	
  1939                           ;incstack = 0
  1940                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1941                           
  1942  0467  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0468  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0469  01A0               	clrf	___wmul@product
  1945  046A  01A1               	clrf	___wmul@product+1
  1946  046B                     l1847:
  1947  046B  1C73               	btfss	___wmul@multiplier,0
  1948  046C  2C6E               	goto	u1061
  1949  046D  2C6F               	goto	u1060
  1950  046E                     u1061:
  1951  046E  2C77               	goto	l303
  1952  046F                     u1060:
  1953  046F                     l1849:
  1954  046F  0875               	movf	___wmul@multiplicand,w
  1955  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1957  0472  07A0               	addwf	___wmul@product,f
  1958  0473  1803               	skipnc
  1959  0474  0AA1               	incf	___wmul@product+1,f
  1960  0475  0876               	movf	___wmul@multiplicand+1,w
  1961  0476  07A1               	addwf	___wmul@product+1,f
  1962  0477                     l303:
  1963  0477  3001               	movlw	1
  1964  0478                     u1075:
  1965  0478  1003               	clrc
  1966  0479  0DF5               	rlf	___wmul@multiplicand,f
  1967  047A  0DF6               	rlf	___wmul@multiplicand+1,f
  1968  047B  3EFF               	addlw	-1
  1969  047C  1D03               	skipz
  1970  047D  2C78               	goto	u1075
  1971  047E                     l1851:
  1972  047E  3001               	movlw	1
  1973  047F                     u1085:
  1974  047F  1003               	clrc
  1975  0480  0CF4               	rrf	___wmul@multiplier+1,f
  1976  0481  0CF3               	rrf	___wmul@multiplier,f
  1977  0482  3EFF               	addlw	-1
  1978  0483  1D03               	skipz
  1979  0484  2C7F               	goto	u1085
  1980  0485                     l1853:
  1981  0485  0873               	movf	___wmul@multiplier,w
  1982  0486  0474               	iorwf	___wmul@multiplier+1,w
  1983  0487  1D03               	btfss	3,2
  1984  0488  2C8A               	goto	u1091
  1985  0489  2C8B               	goto	u1090
  1986  048A                     u1091:
  1987  048A  2C6B               	goto	l1847
  1988  048B                     u1090:
  1989  048B                     l1855:
  1990  048B  1283               	bcf	3,5	;RP0=0, select bank0
  1991  048C  1303               	bcf	3,6	;RP1=0, select bank0
  1992  048D  0821               	movf	___wmul@product+1,w
  1993  048E  00F4               	movwf	?___wmul+1
  1994  048F  0820               	movf	___wmul@product,w
  1995  0490  00F3               	movwf	?___wmul
  1996  0491                     l305:
  1997  0491  0008               	return
  1998  0492                     __end_of___wmul:
  1999                           
  2000                           	psect	text7
  2001  0190                     __ptext7:	
  2002 ;; *************** function ___awdiv *****************
  2003 ;; Defined at:
  2004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  divisor         2    2[BANK0 ] int 
  2007 ;;  dividend        2    4[BANK0 ] int 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  quotient        2    8[BANK0 ] int 
  2010 ;;  sign            1    7[BANK0 ] unsigned char 
  2011 ;;  counter         1    6[BANK0 ] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2    2[BANK0 ] int 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       4       0       0       0
  2022 ;;      Locals:         0       4       0       0       0
  2023 ;;      Temps:          1       0       0       0       0
  2024 ;;      Totals:         1       8       0       0       0
  2025 ;;Total ram usage:        9 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_transform
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function ___awdiv
  2037  0190                     ___awdiv:
  2038  0190                     l1529:	
  2039                           ;incstack = 0
  2040                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2041                           
  2042  0190  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0191  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0192  01A7               	clrf	___awdiv@sign
  2045  0193                     l1531:
  2046  0193  1FA3               	btfss	___awdiv@divisor+1,7
  2047  0194  2996               	goto	u751
  2048  0195  2997               	goto	u750
  2049  0196                     u751:
  2050  0196  299E               	goto	l1537
  2051  0197                     u750:
  2052  0197                     l1533:
  2053  0197  09A2               	comf	___awdiv@divisor,f
  2054  0198  09A3               	comf	___awdiv@divisor+1,f
  2055  0199  0AA2               	incf	___awdiv@divisor,f
  2056  019A  1903               	skipnz
  2057  019B  0AA3               	incf	___awdiv@divisor+1,f
  2058  019C                     l1535:
  2059  019C  01A7               	clrf	___awdiv@sign
  2060  019D  0AA7               	incf	___awdiv@sign,f
  2061  019E                     l1537:
  2062  019E  1FA5               	btfss	___awdiv@dividend+1,7
  2063  019F  29A1               	goto	u761
  2064  01A0  29A2               	goto	u760
  2065  01A1                     u761:
  2066  01A1  29AB               	goto	l1543
  2067  01A2                     u760:
  2068  01A2                     l1539:
  2069  01A2  09A4               	comf	___awdiv@dividend,f
  2070  01A3  09A5               	comf	___awdiv@dividend+1,f
  2071  01A4  0AA4               	incf	___awdiv@dividend,f
  2072  01A5  1903               	skipnz
  2073  01A6  0AA5               	incf	___awdiv@dividend+1,f
  2074  01A7                     l1541:
  2075  01A7  3001               	movlw	1
  2076  01A8  00F7               	movwf	??___awdiv
  2077  01A9  0877               	movf	??___awdiv,w
  2078  01AA  06A7               	xorwf	___awdiv@sign,f
  2079  01AB                     l1543:
  2080  01AB  01A8               	clrf	___awdiv@quotient
  2081  01AC  01A9               	clrf	___awdiv@quotient+1
  2082  01AD                     l1545:
  2083  01AD  0822               	movf	___awdiv@divisor,w
  2084  01AE  0423               	iorwf	___awdiv@divisor+1,w
  2085  01AF  1903               	btfsc	3,2
  2086  01B0  29B2               	goto	u771
  2087  01B1  29B3               	goto	u770
  2088  01B2                     u771:
  2089  01B2  29EA               	goto	l1565
  2090  01B3                     u770:
  2091  01B3                     l1547:
  2092  01B3  01A6               	clrf	___awdiv@counter
  2093  01B4  0AA6               	incf	___awdiv@counter,f
  2094  01B5  29C1               	goto	l1553
  2095  01B6                     l1549:
  2096  01B6  3001               	movlw	1
  2097  01B7                     u785:
  2098  01B7  1003               	clrc
  2099  01B8  0DA2               	rlf	___awdiv@divisor,f
  2100  01B9  0DA3               	rlf	___awdiv@divisor+1,f
  2101  01BA  3EFF               	addlw	-1
  2102  01BB  1D03               	skipz
  2103  01BC  29B7               	goto	u785
  2104  01BD                     l1551:
  2105  01BD  3001               	movlw	1
  2106  01BE  00F7               	movwf	??___awdiv
  2107  01BF  0877               	movf	??___awdiv,w
  2108  01C0  07A6               	addwf	___awdiv@counter,f
  2109  01C1                     l1553:
  2110  01C1  1FA3               	btfss	___awdiv@divisor+1,7
  2111  01C2  29C4               	goto	u791
  2112  01C3  29C5               	goto	u790
  2113  01C4                     u791:
  2114  01C4  29B6               	goto	l1549
  2115  01C5                     u790:
  2116  01C5                     l1555:
  2117  01C5  3001               	movlw	1
  2118  01C6                     u805:
  2119  01C6  1003               	clrc
  2120  01C7  0DA8               	rlf	___awdiv@quotient,f
  2121  01C8  0DA9               	rlf	___awdiv@quotient+1,f
  2122  01C9  3EFF               	addlw	-1
  2123  01CA  1D03               	skipz
  2124  01CB  29C6               	goto	u805
  2125  01CC  0823               	movf	___awdiv@divisor+1,w
  2126  01CD  0225               	subwf	___awdiv@dividend+1,w
  2127  01CE  1D03               	skipz
  2128  01CF  29D2               	goto	u815
  2129  01D0  0822               	movf	___awdiv@divisor,w
  2130  01D1  0224               	subwf	___awdiv@dividend,w
  2131  01D2                     u815:
  2132  01D2  1C03               	skipc
  2133  01D3  29D5               	goto	u811
  2134  01D4  29D6               	goto	u810
  2135  01D5                     u811:
  2136  01D5  29DD               	goto	l1561
  2137  01D6                     u810:
  2138  01D6                     l1557:
  2139  01D6  0822               	movf	___awdiv@divisor,w
  2140  01D7  02A4               	subwf	___awdiv@dividend,f
  2141  01D8  0823               	movf	___awdiv@divisor+1,w
  2142  01D9  1C03               	skipc
  2143  01DA  03A5               	decf	___awdiv@dividend+1,f
  2144  01DB  02A5               	subwf	___awdiv@dividend+1,f
  2145  01DC                     l1559:
  2146  01DC  1428               	bsf	___awdiv@quotient,0
  2147  01DD                     l1561:
  2148  01DD  3001               	movlw	1
  2149  01DE                     u825:
  2150  01DE  1003               	clrc
  2151  01DF  0CA3               	rrf	___awdiv@divisor+1,f
  2152  01E0  0CA2               	rrf	___awdiv@divisor,f
  2153  01E1  3EFF               	addlw	-1
  2154  01E2  1D03               	skipz
  2155  01E3  29DE               	goto	u825
  2156  01E4                     l1563:
  2157  01E4  3001               	movlw	1
  2158  01E5  02A6               	subwf	___awdiv@counter,f
  2159  01E6  1D03               	btfss	3,2
  2160  01E7  29E9               	goto	u831
  2161  01E8  29EA               	goto	u830
  2162  01E9                     u831:
  2163  01E9  29C5               	goto	l1555
  2164  01EA                     u830:
  2165  01EA                     l1565:
  2166  01EA  0827               	movf	___awdiv@sign,w
  2167  01EB  1903               	btfsc	3,2
  2168  01EC  29EE               	goto	u841
  2169  01ED  29EF               	goto	u840
  2170  01EE                     u841:
  2171  01EE  29F4               	goto	l1569
  2172  01EF                     u840:
  2173  01EF                     l1567:
  2174  01EF  09A8               	comf	___awdiv@quotient,f
  2175  01F0  09A9               	comf	___awdiv@quotient+1,f
  2176  01F1  0AA8               	incf	___awdiv@quotient,f
  2177  01F2  1903               	skipnz
  2178  01F3  0AA9               	incf	___awdiv@quotient+1,f
  2179  01F4                     l1569:
  2180  01F4  0829               	movf	___awdiv@quotient+1,w
  2181  01F5  00A3               	movwf	?___awdiv+1
  2182  01F6  0828               	movf	___awdiv@quotient,w
  2183  01F7  00A2               	movwf	?___awdiv
  2184  01F8                     l456:
  2185  01F8  0008               	return
  2186  01F9                     __end_of___awdiv:
  2187                           
  2188                           	psect	text8
  2189  04BB                     __ptext8:	
  2190 ;; *************** function _setup *****************
  2191 ;; Defined at:
  2192 ;;		line 89 in file "lcd_potes.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 5
  2213 ;; This function calls:
  2214 ;;		_config_adc
  2215 ;;		_config_clock
  2216 ;;		_config_ie
  2217 ;;		_config_io
  2218 ;;		_config_tmr1
  2219 ;;		_lcd_setup
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           
  2226                           ;psect for function _setup
  2227  04BB                     _setup:
  2228  04BB                     l1859:	
  2229                           ;incstack = 0
  2230                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2231                           
  2232                           
  2233                           ;lcd_potes.c: 90:     config_io();
  2234  04BB  120A  118A  24F1  120A  118A  	fcall	_config_io
  2235  04C0                     l1861:
  2236                           
  2237                           ;lcd_potes.c: 91:     config_clock();
  2238  04C0  120A  118A  2550  120A  118A  	fcall	_config_clock
  2239  04C5                     l1863:
  2240                           
  2241                           ;lcd_potes.c: 92:     config_tmr1();
  2242  04C5  120A  118A  2536  120A  118A  	fcall	_config_tmr1
  2243                           
  2244                           ;lcd_potes.c: 93:     config_ie();
  2245  04CA  120A  118A  2558  120A  118A  	fcall	_config_ie
  2246  04CF                     l1865:
  2247                           
  2248                           ;lcd_potes.c: 94:     config_adc();
  2249  04CF  120A  118A  2506  120A  118A  	fcall	_config_adc
  2250  04D4                     l1867:
  2251                           
  2252                           ;lcd_potes.c: 95:     lcd_setup();
  2253  04D4  120A  118A  24DA  120A  118A  	fcall	_lcd_setup
  2254  04D9                     l91:
  2255  04D9  0008               	return
  2256  04DA                     __end_of_setup:
  2257                           
  2258                           	psect	text9
  2259  04DA                     __ptext9:	
  2260 ;; *************** function _lcd_setup *****************
  2261 ;; Defined at:
  2262 ;;		line 258 in file "lcd_potes.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         0       0       0       0       0
  2277 ;;      Locals:         0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0
  2279 ;;      Totals:         0       0       0       0       0
  2280 ;;Total ram usage:        0 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 4
  2283 ;; This function calls:
  2284 ;;		_LCD_START
  2285 ;;		_LCD_setCursor
  2286 ;;		_LCD_writeString
  2287 ;; This function is called by:
  2288 ;;		_setup
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _lcd_setup
  2294  04DA                     _lcd_setup:
  2295  04DA                     l1775:	
  2296                           ;incstack = 0
  2297                           ; Regs used in _lcd_setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2298                           
  2299                           
  2300                           ;lcd_potes.c: 259:     LCD_START();
  2301  04DA  120A  118A  22AA  120A  118A  	fcall	_LCD_START
  2302  04DF                     l1777:
  2303                           
  2304                           ;lcd_potes.c: 260:     LCD_setCursor(1, 1);
  2305  04DF  01F6               	clrf	LCD_setCursor@columna
  2306  04E0  0AF6               	incf	LCD_setCursor@columna,f
  2307  04E1  3001               	movlw	1
  2308  04E2  120A  118A  2434  120A  118A  	fcall	_LCD_setCursor
  2309  04E7                     l1779:
  2310                           
  2311                           ;lcd_potes.c: 261:     LCD_writeString("S1:   S2:  S3:");
  2312  04E7  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2313  04E8  00F6               	movwf	LCD_writeString@text
  2314  04E9  3080               	movlw	128
  2315  04EA  00F7               	movwf	LCD_writeString@text+1
  2316  04EB  120A  118A  233C  120A  118A  	fcall	_LCD_writeString
  2317  04F0                     l138:
  2318  04F0  0008               	return
  2319  04F1                     __end_of_lcd_setup:
  2320                           
  2321                           	psect	text10
  2322  033C                     __ptext10:	
  2323 ;; *************** function _LCD_writeString *****************
  2324 ;; Defined at:
  2325 ;;		line 90 in file "lcd_8bitsA.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  text            2    6[COMMON] PTR unsigned char 
  2328 ;;		 -> STR_4(15), STR_3(3), STR_2(3), buffer(5), 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  i               2    3[BANK0 ] int 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         2       0       0       0       0
  2341 ;;      Locals:         0       2       0       0       0
  2342 ;;      Temps:          0       3       0       0       0
  2343 ;;      Totals:         2       5       0       0       0
  2344 ;;Total ram usage:        7 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 3
  2347 ;; This function calls:
  2348 ;;		_LCD_write
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;;		_lcd_setup
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           
  2356                           ;psect for function _LCD_writeString
  2357  033C                     _LCD_writeString:
  2358  033C                     l1741:	
  2359                           ;incstack = 0
  2360                           ; Regs used in _LCD_writeString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2361                           
  2362                           
  2363                           ;lcd_8bitsA.c: 91:     int i;;lcd_8bitsA.c: 92:     for (i = 0; text[i] != '\0'; i++){
  2364  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2365  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2366  033E  01A3               	clrf	LCD_writeString@i
  2367  033F  01A4               	clrf	LCD_writeString@i+1
  2368  0340  2B65               	goto	l1747
  2369  0341                     l1743:
  2370                           
  2371                           ;lcd_8bitsA.c: 93:         LCD_write(text[i]);
  2372  0341  0823               	movf	LCD_writeString@i,w
  2373  0342  0776               	addwf	LCD_writeString@text,w
  2374  0343  00A1               	movwf	??_LCD_writeString+1
  2375  0344  0877               	movf	LCD_writeString@text+1,w
  2376  0345  00A0               	movwf	??_LCD_writeString
  2377  0346  1803               	skipnc
  2378  0347  0AA0               	incf	??_LCD_writeString,f
  2379  0348  1FA3               	btfss	LCD_writeString@i,7
  2380  0349  2B4B               	goto	u890
  2381  034A  03A0               	decf	??_LCD_writeString,f
  2382  034B                     u890:
  2383  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2384  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2385  034D  0820               	movf	??_LCD_writeString,w
  2386  034E  00A2               	movwf	??_LCD_writeString+2
  2387  034F  0822               	movf	??_LCD_writeString+2,w
  2388  0350  00FF               	movwf	btemp+1
  2389  0351  0821               	movf	??_LCD_writeString+1,w
  2390  0352  0084               	movwf	4
  2391  0353  120A  118A  2400  120A  118A  	fcall	stringtab
  2392  0358  120A  118A  2518  120A  118A  	fcall	_LCD_write
  2393  035D                     l1745:
  2394                           
  2395                           ;lcd_8bitsA.c: 94:     }
  2396  035D  3001               	movlw	1
  2397  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2398  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0360  07A3               	addwf	LCD_writeString@i,f
  2400  0361  1803               	skipnc
  2401  0362  0AA4               	incf	LCD_writeString@i+1,f
  2402  0363  3000               	movlw	0
  2403  0364  07A4               	addwf	LCD_writeString@i+1,f
  2404  0365                     l1747:
  2405  0365  0823               	movf	LCD_writeString@i,w
  2406  0366  0776               	addwf	LCD_writeString@text,w
  2407  0367  00A1               	movwf	??_LCD_writeString+1
  2408  0368  0877               	movf	LCD_writeString@text+1,w
  2409  0369  00A0               	movwf	??_LCD_writeString
  2410  036A  1803               	skipnc
  2411  036B  0AA0               	incf	??_LCD_writeString,f
  2412  036C  1FA3               	btfss	LCD_writeString@i,7
  2413  036D  2B6F               	goto	u900
  2414  036E  03A0               	decf	??_LCD_writeString,f
  2415  036F                     u900:
  2416  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0371  0820               	movf	??_LCD_writeString,w
  2419  0372  00A2               	movwf	??_LCD_writeString+2
  2420  0373  0822               	movf	??_LCD_writeString+2,w
  2421  0374  00FF               	movwf	btemp+1
  2422  0375  0821               	movf	??_LCD_writeString+1,w
  2423  0376  0084               	movwf	4
  2424  0377  120A  118A  2400  120A  118A  	fcall	stringtab
  2425  037C  3A00               	xorlw	0
  2426  037D  1D03               	skipz
  2427  037E  2B80               	goto	u911
  2428  037F  2B81               	goto	u910
  2429  0380                     u911:
  2430  0380  2B41               	goto	l1743
  2431  0381                     u910:
  2432  0381                     l183:
  2433  0381  0008               	return
  2434  0382                     __end_of_LCD_writeString:
  2435                           
  2436                           	psect	text11
  2437  0518                     __ptext11:	
  2438 ;; *************** function _LCD_write *****************
  2439 ;; Defined at:
  2440 ;;		line 81 in file "lcd_8bitsA.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  value           1    wreg     unsigned char 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  value           1    5[COMMON] unsigned char 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  1    wreg      void 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, pclath, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2454 ;;      Params:         0       0       0       0       0
  2455 ;;      Locals:         1       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0
  2457 ;;      Totals:         1       0       0       0       0
  2458 ;;Total ram usage:        1 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; Hardware stack levels required when called: 2
  2461 ;; This function calls:
  2462 ;;		_flip_EN
  2463 ;; This function is called by:
  2464 ;;		_LCD_writeString
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _LCD_write
  2470  0518                     _LCD_write:
  2471                           
  2472                           ;incstack = 0
  2473                           ; Regs used in _LCD_write: [wreg+status,2+status,0+pclath+cstack]
  2474                           ;LCD_write@value stored from wreg
  2475  0518  00F5               	movwf	LCD_write@value
  2476  0519                     l1281:
  2477                           
  2478                           ;lcd_8bitsA.c: 82:     PORTCbits.RC2 = 1;
  2479  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2480  051A  1303               	bcf	3,6	;RP1=0, select bank0
  2481  051B  1507               	bsf	7,2	;volatile
  2482  051C                     l1283:
  2483                           
  2484                           ;lcd_8bitsA.c: 83:     PORTD = value;
  2485  051C  0875               	movf	LCD_write@value,w
  2486  051D  0088               	movwf	8	;volatile
  2487  051E                     l1285:
  2488                           
  2489                           ;lcd_8bitsA.c: 84:     flip_EN();
  2490  051E  120A  118A  2527  120A  118A  	fcall	_flip_EN
  2491  0523                     l1287:
  2492                           
  2493                           ;lcd_8bitsA.c: 85:     PORTCbits.RC2 = 0;
  2494  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0525  1107               	bcf	7,2	;volatile
  2497  0526                     l177:
  2498  0526  0008               	return
  2499  0527                     __end_of_LCD_write:
  2500                           
  2501                           	psect	text12
  2502  0434                     __ptext12:	
  2503 ;; *************** function _LCD_setCursor *****************
  2504 ;; Defined at:
  2505 ;;		line 61 in file "lcd_8bitsA.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  fila            1    wreg     unsigned char 
  2508 ;;  columna         1    6[COMMON] unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  fila            1    7[COMMON] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         1       0       0       0       0
  2521 ;;      Locals:         1       0       0       0       0
  2522 ;;      Temps:          0       2       0       0       0
  2523 ;;      Totals:         2       2       0       0       0
  2524 ;;Total ram usage:        4 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 3
  2527 ;; This function calls:
  2528 ;;		_LCD_CMD
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;;		_lcd_setup
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _LCD_setCursor
  2537  0434                     _LCD_setCursor:
  2538                           
  2539                           ;incstack = 0
  2540                           ; Regs used in _LCD_setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2541                           ;LCD_setCursor@fila stored from wreg
  2542  0434  00F7               	movwf	LCD_setCursor@fila
  2543  0435                     l1725:
  2544                           
  2545                           ;lcd_8bitsA.c: 62:     switch (fila){
  2546  0435  2C54               	goto	l1735
  2547  0436                     l1727:
  2548                           
  2549                           ;lcd_8bitsA.c: 65:             LCD_CMD(((columna & 0x0F)-1) | 0x80);
  2550  0436  0876               	movf	LCD_setCursor@columna,w
  2551  0437  390F               	andlw	15
  2552  0438  3EFF               	addlw	255
  2553  0439  3880               	iorlw	128
  2554  043A  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2555                           
  2556                           ;lcd_8bitsA.c: 66:             break;
  2557  043F  2C66               	goto	l174
  2558  0440                     l1729:
  2559                           
  2560                           ;lcd_8bitsA.c: 70:             LCD_CMD(((columna & 0x0F)-1) | 0xC0);
  2561  0440  0876               	movf	LCD_setCursor@columna,w
  2562  0441  390F               	andlw	15
  2563  0442  3EFF               	addlw	255
  2564  0443  38C0               	iorlw	192
  2565  0444  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2566                           
  2567                           ;lcd_8bitsA.c: 71:             break;
  2568  0449  2C66               	goto	l174
  2569  044A                     l1731:
  2570                           
  2571                           ;lcd_8bitsA.c: 74:             LCD_CMD(((columna & 0x0F)-1) | 0x80);
  2572  044A  0876               	movf	LCD_setCursor@columna,w
  2573  044B  390F               	andlw	15
  2574  044C  3EFF               	addlw	255
  2575  044D  3880               	iorlw	128
  2576  044E  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2577                           
  2578                           ;lcd_8bitsA.c: 75:             break;
  2579  0453  2C66               	goto	l174
  2580  0454                     l1735:
  2581  0454  0877               	movf	LCD_setCursor@fila,w
  2582  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0457  00A0               	movwf	??_LCD_setCursor
  2585  0458  01A1               	clrf	??_LCD_setCursor+1
  2586                           
  2587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2588                           ; Switch size 1, requested type "simple"
  2589                           ; Number of cases is 1, Range of values is 0 to 0
  2590                           ; switch strategies available:
  2591                           ; Name         Instructions Cycles
  2592                           ; simple_byte            4     3 (average)
  2593                           ; direct_byte           11     8 (fixed)
  2594                           ; jumptable            260     6 (fixed)
  2595                           ;	Chosen strategy is simple_byte
  2596  0459  0821               	movf	??_LCD_setCursor+1,w
  2597  045A  3A00               	xorlw	0	; case 0
  2598  045B  1903               	skipnz
  2599  045C  2C5E               	goto	l1987
  2600  045D  2C4A               	goto	l1731
  2601  045E                     l1987:
  2602                           
  2603                           ; Switch size 1, requested type "simple"
  2604                           ; Number of cases is 2, Range of values is 1 to 2
  2605                           ; switch strategies available:
  2606                           ; Name         Instructions Cycles
  2607                           ; simple_byte            7     4 (average)
  2608                           ; direct_byte           17    11 (fixed)
  2609                           ; jumptable            263     9 (fixed)
  2610                           ;	Chosen strategy is simple_byte
  2611  045E  0820               	movf	??_LCD_setCursor,w
  2612  045F  3A01               	xorlw	1	; case 1
  2613  0460  1903               	skipnz
  2614  0461  2C36               	goto	l1727
  2615  0462  3A03               	xorlw	3	; case 2
  2616  0463  1903               	skipnz
  2617  0464  2C40               	goto	l1729
  2618  0465  2C4A               	goto	l1731
  2619  0466                     l174:
  2620  0466  0008               	return
  2621  0467                     __end_of_LCD_setCursor:
  2622                           
  2623                           	psect	text13
  2624  02AA                     __ptext13:	
  2625 ;; *************** function _LCD_START *****************
  2626 ;; Defined at:
  2627 ;;		line 19 in file "lcd_8bitsA.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, pclath, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0
  2643 ;;      Temps:          2       0       0       0       0
  2644 ;;      Totals:         2       0       0       0       0
  2645 ;;Total ram usage:        2 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 3
  2648 ;; This function calls:
  2649 ;;		_LCD_CMD
  2650 ;; This function is called by:
  2651 ;;		_lcd_setup
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function _LCD_START
  2657  02AA                     _LCD_START:
  2658  02AA                     l1335:	
  2659                           ;incstack = 0
  2660                           ; Regs used in _LCD_START: [wreg+status,2+status,0+pclath+cstack]
  2661                           
  2662                           
  2663                           ;lcd_8bitsA.c: 20:     PORTCbits.RC3 = 0;
  2664  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2665  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2666  02AC  1187               	bcf	7,3	;volatile
  2667                           
  2668                           ;lcd_8bitsA.c: 21:     PORTCbits.RC2 = 0;
  2669  02AD  1107               	bcf	7,2	;volatile
  2670  02AE                     l1337:
  2671                           
  2672                           ;lcd_8bitsA.c: 22:     PORTD = 0;
  2673  02AE  0188               	clrf	8	;volatile
  2674  02AF                     l1339:
  2675                           
  2676                           ;lcd_8bitsA.c: 25:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2677  02AF  301A               	movlw	26
  2678  02B0  00F7               	movwf	??_LCD_START+1
  2679  02B1  30F8               	movlw	248
  2680  02B2  00F6               	movwf	??_LCD_START
  2681  02B3                     u1137:
  2682  02B3  0BF6               	decfsz	??_LCD_START,f
  2683  02B4  2AB3               	goto	u1137
  2684  02B5  0BF7               	decfsz	??_LCD_START+1,f
  2685  02B6  2AB3               	goto	u1137
  2686  02B7  0000               	nop
  2687  02B8                     l1341:
  2688                           
  2689                           ;lcd_8bitsA.c: 26:     LCD_CMD (0x30);
  2690  02B8  3030               	movlw	48
  2691  02B9  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2692  02BE                     l1343:
  2693                           
  2694                           ;lcd_8bitsA.c: 28:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2695  02BE  3007               	movlw	7
  2696  02BF  00F7               	movwf	??_LCD_START+1
  2697  02C0  307D               	movlw	125
  2698  02C1  00F6               	movwf	??_LCD_START
  2699  02C2                     u1147:
  2700  02C2  0BF6               	decfsz	??_LCD_START,f
  2701  02C3  2AC2               	goto	u1147
  2702  02C4  0BF7               	decfsz	??_LCD_START+1,f
  2703  02C5  2AC2               	goto	u1147
  2704  02C6                     l1345:
  2705                           
  2706                           ;lcd_8bitsA.c: 29:     LCD_CMD (0x30);
  2707  02C6  3030               	movlw	48
  2708  02C7  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2709  02CC                     l1347:
  2710                           
  2711                           ;lcd_8bitsA.c: 31:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2712  02CC  3042               	movlw	66
  2713  02CD  00F6               	movwf	??_LCD_START
  2714  02CE                     u1157:
  2715  02CE  0BF6               	decfsz	??_LCD_START,f
  2716  02CF  2ACE               	goto	u1157
  2717  02D0  0000               	nop
  2718  02D1                     l1349:
  2719                           
  2720                           ;lcd_8bitsA.c: 32:     LCD_CMD (0x30);
  2721  02D1  3030               	movlw	48
  2722  02D2  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2723  02D7                     l1351:
  2724                           
  2725                           ;lcd_8bitsA.c: 36:     LCD_CMD (0x3C);
  2726  02D7  303C               	movlw	60
  2727  02D8  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2728  02DD                     l1353:
  2729                           
  2730                           ;lcd_8bitsA.c: 39:     LCD_CMD (0x0C);
  2731  02DD  300C               	movlw	12
  2732  02DE  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2733  02E3                     l1355:
  2734                           
  2735                           ;lcd_8bitsA.c: 42:     LCD_CMD (0x10);
  2736  02E3  3010               	movlw	16
  2737  02E4  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2738  02E9                     l1357:
  2739                           
  2740                           ;lcd_8bitsA.c: 45:     LCD_CMD (0x01);
  2741  02E9  3001               	movlw	1
  2742  02EA  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2743  02EF                     l1359:
  2744                           
  2745                           ;lcd_8bitsA.c: 48:     LCD_CMD (0x06);
  2746  02EF  3006               	movlw	6
  2747  02F0  120A  118A  2544  120A  118A  	fcall	_LCD_CMD
  2748  02F5                     l163:
  2749  02F5  0008               	return
  2750  02F6                     __end_of_LCD_START:
  2751                           
  2752                           	psect	text14
  2753  0544                     __ptext14:	
  2754 ;; *************** function _LCD_CMD *****************
  2755 ;; Defined at:
  2756 ;;		line 12 in file "lcd_8bitsA.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  cmd             1    wreg     unsigned char 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  cmd             1    5[COMMON] unsigned char 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       0       0       0       0
  2771 ;;      Locals:         1       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0
  2773 ;;      Totals:         1       0       0       0       0
  2774 ;;Total ram usage:        1 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 2
  2777 ;; This function calls:
  2778 ;;		_flip_EN
  2779 ;; This function is called by:
  2780 ;;		_LCD_START
  2781 ;;		_LCD_setCursor
  2782 ;;		_LCD_CLR
  2783 ;;		_LCD_shiftR
  2784 ;;		_LCD_shiftL
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           
  2789                           ;psect for function _LCD_CMD
  2790  0544                     _LCD_CMD:
  2791                           
  2792                           ;incstack = 0
  2793                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2794                           ;LCD_CMD@cmd stored from wreg
  2795  0544  00F5               	movwf	LCD_CMD@cmd
  2796  0545                     l1273:
  2797                           
  2798                           ;lcd_8bitsA.c: 13:     PORTCbits.RC2 = 0;
  2799  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0547  1107               	bcf	7,2	;volatile
  2802  0548                     l1275:
  2803                           
  2804                           ;lcd_8bitsA.c: 14:     PORTD = cmd;
  2805  0548  0875               	movf	LCD_CMD@cmd,w
  2806  0549  0088               	movwf	8	;volatile
  2807  054A                     l1277:
  2808                           
  2809                           ;lcd_8bitsA.c: 15:     flip_EN ();
  2810  054A  120A  118A  2527  120A  118A  	fcall	_flip_EN
  2811  054F                     l160:
  2812  054F  0008               	return
  2813  0550                     __end_of_LCD_CMD:
  2814                           
  2815                           	psect	text15
  2816  0527                     __ptext15:	
  2817 ;; *************** function _flip_EN *****************
  2818 ;; Defined at:
  2819 ;;		line 5 in file "lcd_8bitsA.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2833 ;;      Params:         0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0
  2835 ;;      Temps:          2       0       0       0       0
  2836 ;;      Totals:         2       0       0       0       0
  2837 ;;Total ram usage:        2 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_LCD_CMD
  2844 ;;		_LCD_write
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _flip_EN
  2850  0527                     _flip_EN:
  2851  0527                     l1267:	
  2852                           ;incstack = 0
  2853                           ; Regs used in _flip_EN: [wreg]
  2854                           
  2855                           
  2856                           ;lcd_8bitsA.c: 6:     PORTCbits.RC3 = 1;
  2857  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2859  0529  1587               	bsf	7,3	;volatile
  2860  052A                     l1269:
  2861                           
  2862                           ;lcd_8bitsA.c: 7:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2863  052A  3007               	movlw	7
  2864  052B  00F4               	movwf	??_flip_EN+1
  2865  052C  307D               	movlw	125
  2866  052D  00F3               	movwf	??_flip_EN
  2867  052E                     u1167:
  2868  052E  0BF3               	decfsz	??_flip_EN,f
  2869  052F  2D2E               	goto	u1167
  2870  0530  0BF4               	decfsz	??_flip_EN+1,f
  2871  0531  2D2E               	goto	u1167
  2872  0532                     l1271:
  2873                           
  2874                           ;lcd_8bitsA.c: 8:     PORTCbits.RC3 = 0;
  2875  0532  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0533  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0534  1187               	bcf	7,3	;volatile
  2878  0535                     l157:
  2879  0535  0008               	return
  2880  0536                     __end_of_flip_EN:
  2881                           
  2882                           	psect	text16
  2883  0536                     __ptext16:	
  2884 ;; *************** function _config_tmr1 *****************
  2885 ;; Defined at:
  2886 ;;		line 226 in file "lcd_potes.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0
  2902 ;;      Temps:          0       0       0       0       0
  2903 ;;      Totals:         0       0       0       0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_setup
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function _config_tmr1
  2916  0536                     _config_tmr1:
  2917  0536                     l1429:	
  2918                           ;incstack = 0
  2919                           ; Regs used in _config_tmr1: [wreg]
  2920                           
  2921                           
  2922                           ;lcd_potes.c: 228:     T1CONbits.T1CKPS1 = 0;
  2923  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0538  1290               	bcf	16,5	;volatile
  2926                           
  2927                           ;lcd_potes.c: 229:     T1CONbits.T1CKPS0 = 0;
  2928  0539  1210               	bcf	16,4	;volatile
  2929                           
  2930                           ;lcd_potes.c: 230:     T1CONbits.T1OSCEN = 0;
  2931  053A  1190               	bcf	16,3	;volatile
  2932                           
  2933                           ;lcd_potes.c: 231:     T1CONbits.T1SYNC = 1;
  2934  053B  1510               	bsf	16,2	;volatile
  2935                           
  2936                           ;lcd_potes.c: 232:     T1CONbits.TMR1CS = 0;
  2937  053C  1090               	bcf	16,1	;volatile
  2938                           
  2939                           ;lcd_potes.c: 233:     T1CONbits.TMR1ON = 1;
  2940  053D  1410               	bsf	16,0	;volatile
  2941  053E                     l1431:
  2942                           
  2943                           ;lcd_potes.c: 234:     TMR1H = 248;
  2944  053E  30F8               	movlw	248
  2945  053F  008F               	movwf	15	;volatile
  2946                           
  2947                           ;lcd_potes.c: 235:     TMR1L = 48;
  2948  0540  3030               	movlw	48
  2949  0541  008E               	movwf	14	;volatile
  2950  0542                     l1433:
  2951                           
  2952                           ;lcd_potes.c: 239:     PIR1bits.TMR1IF = 0;
  2953  0542  100C               	bcf	12,0	;volatile
  2954  0543                     l129:
  2955  0543  0008               	return
  2956  0544                     __end_of_config_tmr1:
  2957                           
  2958                           	psect	text17
  2959  04F1                     __ptext17:	
  2960 ;; *************** function _config_io *****************
  2961 ;; Defined at:
  2962 ;;		line 196 in file "lcd_potes.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		status,2
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0
  2979 ;;      Totals:         0       0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 1
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_setup
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _config_io
  2992  04F1                     _config_io:
  2993  04F1                     l1411:	
  2994                           ;incstack = 0
  2995                           ; Regs used in _config_io: [status,2]
  2996                           
  2997                           
  2998                           ;lcd_potes.c: 197:     ANSEL = 0;
  2999  04F1  1683               	bsf	3,5	;RP0=1, select bank3
  3000  04F2  1703               	bsf	3,6	;RP1=1, select bank3
  3001  04F3  0188               	clrf	8	;volatile
  3002  04F4                     l1413:
  3003                           
  3004                           ;lcd_potes.c: 198:     ANSELbits.ANS0 = 1;
  3005  04F4  1408               	bsf	8,0	;volatile
  3006  04F5                     l1415:
  3007                           
  3008                           ;lcd_potes.c: 199:     ANSELbits.ANS1 = 1;
  3009  04F5  1488               	bsf	8,1	;volatile
  3010                           
  3011                           ;lcd_potes.c: 200:     ANSELH = 0;
  3012  04F6  0189               	clrf	9	;volatile
  3013                           
  3014                           ;lcd_potes.c: 202:     TRISA = 0;
  3015  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  3016  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  3017  04F9  0185               	clrf	5	;volatile
  3018  04FA                     l1417:
  3019                           
  3020                           ;lcd_potes.c: 203:     TRISAbits.TRISA0 = 1;
  3021  04FA  1405               	bsf	5,0	;volatile
  3022  04FB                     l1419:
  3023                           
  3024                           ;lcd_potes.c: 204:     TRISAbits.TRISA1 = 1;
  3025  04FB  1485               	bsf	5,1	;volatile
  3026                           
  3027                           ;lcd_potes.c: 206:     TRISB = 0;
  3028  04FC  0186               	clrf	6	;volatile
  3029                           
  3030                           ;lcd_potes.c: 208:     TRISC = 0;
  3031  04FD  0187               	clrf	7	;volatile
  3032                           
  3033                           ;lcd_potes.c: 209:     TRISD = 0;
  3034  04FE  0188               	clrf	8	;volatile
  3035                           
  3036                           ;lcd_potes.c: 211:     PORTA = 0;
  3037  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0501  0185               	clrf	5	;volatile
  3040                           
  3041                           ;lcd_potes.c: 213:     PORTB = 0;
  3042  0502  0186               	clrf	6	;volatile
  3043                           
  3044                           ;lcd_potes.c: 215:     PORTC = 0;
  3045  0503  0187               	clrf	7	;volatile
  3046                           
  3047                           ;lcd_potes.c: 216:     PORTD = 0;
  3048  0504  0188               	clrf	8	;volatile
  3049  0505                     l123:
  3050  0505  0008               	return
  3051  0506                     __end_of_config_io:
  3052                           
  3053                           	psect	text18
  3054  0558                     __ptext18:	
  3055 ;; *************** function _config_ie *****************
  3056 ;; Defined at:
  3057 ;;		line 243 in file "lcd_potes.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		None
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0
  3074 ;;      Totals:         0       0       0       0       0
  3075 ;;Total ram usage:        0 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; Hardware stack levels required when called: 1
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_setup
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _config_ie
  3087  0558                     _config_ie:
  3088  0558                     l1437:	
  3089                           ;incstack = 0
  3090                           ; Regs used in _config_ie: []
  3091                           
  3092                           
  3093                           ;lcd_potes.c: 244:     INTCONbits.GIE = 1;
  3094  0558  178B               	bsf	11,7	;volatile
  3095                           
  3096                           ;lcd_potes.c: 245:     INTCONbits.PEIE = 1;
  3097  0559  170B               	bsf	11,6	;volatile
  3098                           
  3099                           ;lcd_potes.c: 247:     PIE1bits.TMR1IE = 1;
  3100  055A  1683               	bsf	3,5	;RP0=1, select bank1
  3101  055B  1303               	bcf	3,6	;RP1=0, select bank1
  3102  055C  140C               	bsf	12,0	;volatile
  3103                           
  3104                           ;lcd_potes.c: 248:     PIE1bits.ADIE = 1;
  3105  055D  170C               	bsf	12,6	;volatile
  3106  055E                     l132:	
  3107                           ;lcd_potes.c: 249:     return;
  3108                           
  3109  055E  0008               	return
  3110  055F                     __end_of_config_ie:
  3111                           
  3112                           	psect	text19
  3113  0550                     __ptext19:	
  3114 ;; *************** function _config_clock *****************
  3115 ;; Defined at:
  3116 ;;		line 220 in file "lcd_potes.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;		None
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  1    wreg      void 
  3123 ;; Registers used:
  3124 ;;		wreg, status,2, status,0
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         0       0       0       0       0
  3131 ;;      Locals:         0       0       0       0       0
  3132 ;;      Temps:          0       0       0       0       0
  3133 ;;      Totals:         0       0       0       0       0
  3134 ;;Total ram usage:        0 bytes
  3135 ;; Hardware stack levels used: 1
  3136 ;; Hardware stack levels required when called: 1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_setup
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           
  3145                           ;psect for function _config_clock
  3146  0550                     _config_clock:
  3147  0550                     l1423:	
  3148                           ;incstack = 0
  3149                           ; Regs used in _config_clock: [wreg+status,2+status,0]
  3150                           
  3151                           
  3152                           ;lcd_potes.c: 221:     OSCCONbits.IRCF = 0b110;
  3153  0550  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0551  1303               	bcf	3,6	;RP1=0, select bank1
  3155  0552  080F               	movf	15,w	;volatile
  3156  0553  398F               	andlw	-113
  3157  0554  3860               	iorlw	96
  3158  0555  008F               	movwf	15	;volatile
  3159  0556                     l1425:
  3160                           
  3161                           ;lcd_potes.c: 222:     OSCCONbits.SCS = 1;
  3162  0556  140F               	bsf	15,0	;volatile
  3163  0557                     l126:
  3164  0557  0008               	return
  3165  0558                     __end_of_config_clock:
  3166                           
  3167                           	psect	text20
  3168  0506                     __ptext20:	
  3169 ;; *************** function _config_adc *****************
  3170 ;; Defined at:
  3171 ;;		line 252 in file "lcd_potes.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0
  3187 ;;      Temps:          1       0       0       0       0
  3188 ;;      Totals:         1       0       0       0       0
  3189 ;;Total ram usage:        1 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 2
  3192 ;; This function calls:
  3193 ;;		_con_ADC
  3194 ;; This function is called by:
  3195 ;;		_setup
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _config_adc
  3201  0506                     _config_adc:
  3202  0506                     l1439:	
  3203                           ;incstack = 0
  3204                           ; Regs used in _config_adc: [wreg+status,2+status,0+pclath+cstack]
  3205                           
  3206                           
  3207                           ;lcd_potes.c: 253:     con_ADC (2);
  3208  0506  3002               	movlw	2
  3209  0507  120A  118A  23BE  120A  118A  	fcall	_con_ADC
  3210  050C                     l1441:
  3211                           
  3212                           ;lcd_potes.c: 254:     ADCON0bits.CHS = 13;
  3213  050C  1283               	bcf	3,5	;RP0=0, select bank0
  3214  050D  1303               	bcf	3,6	;RP1=0, select bank0
  3215  050E  081F               	movf	31,w	;volatile
  3216  050F  39C3               	andlw	-61
  3217  0510  3834               	iorlw	52
  3218  0511  009F               	movwf	31	;volatile
  3219  0512                     l1443:
  3220                           
  3221                           ;lcd_potes.c: 255:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  3222  0512  3010               	movlw	16
  3223  0513  00F4               	movwf	??_config_adc
  3224  0514                     u1177:
  3225  0514  0BF4               	decfsz	??_config_adc,f
  3226  0515  2D14               	goto	u1177
  3227  0516  0000               	nop
  3228  0517                     l135:
  3229  0517  0008               	return
  3230  0518                     __end_of_config_adc:
  3231                           
  3232                           	psect	text21
  3233  03BE                     __ptext21:	
  3234 ;; *************** function _con_ADC *****************
  3235 ;; Defined at:
  3236 ;;		line 3 in file "ADC_config.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  ADC_valor       1    wreg     unsigned char 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  ADC_valor       1    3[COMMON] unsigned char 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3250 ;;      Params:         0       0       0       0       0
  3251 ;;      Locals:         1       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0
  3253 ;;      Totals:         1       0       0       0       0
  3254 ;;Total ram usage:        1 bytes
  3255 ;; Hardware stack levels used: 1
  3256 ;; Hardware stack levels required when called: 1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_config_adc
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function _con_ADC
  3266  03BE                     _con_ADC:
  3267                           
  3268                           ;incstack = 0
  3269                           ; Regs used in _con_ADC: [wreg+status,2+status,0]
  3270                           ;con_ADC@ADC_valor stored from wreg
  3271  03BE  00F3               	movwf	con_ADC@ADC_valor
  3272  03BF                     l1315:
  3273                           
  3274                           ;ADC_config.c: 4:     if (ADC_valor == 1){
  3275  03BF  0373               	decf	con_ADC@ADC_valor,w
  3276  03C0  1D03               	btfss	3,2
  3277  03C1  2BC3               	goto	u481
  3278  03C2  2BC4               	goto	u480
  3279  03C3                     u481:
  3280  03C3  2BCE               	goto	l145
  3281  03C4                     u480:
  3282  03C4                     l1317:
  3283                           
  3284                           ;ADC_config.c: 5:         ADCON1bits.ADFM = 0;
  3285  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  3286  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  3287  03C6  139F               	bcf	31,7	;volatile
  3288                           
  3289                           ;ADC_config.c: 6:         ADCON1bits.VCFG0 = 0;
  3290  03C7  121F               	bcf	31,4	;volatile
  3291                           
  3292                           ;ADC_config.c: 7:         ADCON1bits.VCFG1 = 0;
  3293  03C8  129F               	bcf	31,5	;volatile
  3294  03C9                     l1319:
  3295                           
  3296                           ;ADC_config.c: 9:         ADCON0bits.ADCS = 0b00;
  3297  03C9  303F               	movlw	-193
  3298  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3299  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3300  03CC  059F               	andwf	31,f	;volatile
  3301  03CD                     l1321:
  3302                           
  3303                           ;ADC_config.c: 10:         ADCON0bits.ADON = 1;
  3304  03CD  141F               	bsf	31,0	;volatile
  3305  03CE                     l145:	
  3306                           ;ADC_config.c: 11:     }
  3307                           
  3308                           
  3309                           ;ADC_config.c: 13:     if (ADC_valor == 2){
  3310  03CE  3002               	movlw	2
  3311  03CF  0673               	xorwf	con_ADC@ADC_valor,w
  3312  03D0  1D03               	btfss	3,2
  3313  03D1  2BD3               	goto	u491
  3314  03D2  2BD4               	goto	u490
  3315  03D3                     u491:
  3316  03D3  2BE0               	goto	l146
  3317  03D4                     u490:
  3318  03D4                     l1323:
  3319                           
  3320                           ;ADC_config.c: 14:         ADCON1bits.ADFM = 0;
  3321  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3322  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3323  03D6  139F               	bcf	31,7	;volatile
  3324                           
  3325                           ;ADC_config.c: 15:         ADCON1bits.VCFG0 = 0;
  3326  03D7  121F               	bcf	31,4	;volatile
  3327                           
  3328                           ;ADC_config.c: 16:         ADCON1bits.VCFG1 = 0;
  3329  03D8  129F               	bcf	31,5	;volatile
  3330  03D9                     l1325:
  3331                           
  3332                           ;ADC_config.c: 18:         ADCON0bits.ADCS = 0b01;
  3333  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3334  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3335  03DB  081F               	movf	31,w	;volatile
  3336  03DC  393F               	andlw	-193
  3337  03DD  3840               	iorlw	64
  3338  03DE  009F               	movwf	31	;volatile
  3339  03DF                     l1327:
  3340                           
  3341                           ;ADC_config.c: 19:         ADCON0bits.ADON = 1;
  3342  03DF  141F               	bsf	31,0	;volatile
  3343  03E0                     l146:	
  3344                           ;ADC_config.c: 20:     }
  3345                           
  3346                           
  3347                           ;ADC_config.c: 22:     if (ADC_valor == 3){
  3348  03E0  3003               	movlw	3
  3349  03E1  0673               	xorwf	con_ADC@ADC_valor,w
  3350  03E2  1D03               	btfss	3,2
  3351  03E3  2BE5               	goto	u501
  3352  03E4  2BE6               	goto	u500
  3353  03E5                     u501:
  3354  03E5  2BF2               	goto	l148
  3355  03E6                     u500:
  3356  03E6                     l1329:
  3357                           
  3358                           ;ADC_config.c: 23:         ADCON1bits.ADFM = 0;
  3359  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  3360  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  3361  03E8  139F               	bcf	31,7	;volatile
  3362                           
  3363                           ;ADC_config.c: 24:         ADCON1bits.VCFG0 = 0;
  3364  03E9  121F               	bcf	31,4	;volatile
  3365                           
  3366                           ;ADC_config.c: 25:         ADCON1bits.VCFG1 = 0;
  3367  03EA  129F               	bcf	31,5	;volatile
  3368  03EB                     l1331:
  3369                           
  3370                           ;ADC_config.c: 27:         ADCON0bits.ADCS = 0b10;
  3371  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  3372  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  3373  03ED  081F               	movf	31,w	;volatile
  3374  03EE  393F               	andlw	-193
  3375  03EF  3880               	iorlw	128
  3376  03F0  009F               	movwf	31	;volatile
  3377  03F1                     l1333:
  3378                           
  3379                           ;ADC_config.c: 28:         ADCON0bits.ADON = 1;
  3380  03F1  141F               	bsf	31,0	;volatile
  3381  03F2                     l148:
  3382  03F2  0008               	return
  3383  03F3                     __end_of_con_ADC:
  3384                           
  3385                           	psect	text22
  3386  0492                     __ptext22:	
  3387 ;; *************** function _isr *****************
  3388 ;; Defined at:
  3389 ;;		line 104 in file "lcd_potes.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0
  3405 ;;      Temps:          3       0       0       0       0
  3406 ;;      Totals:         3       0       0       0       0
  3407 ;;Total ram usage:        3 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		Interrupt level 1
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _isr
  3418  0492                     _isr:
  3419  0492                     i1l1589:
  3420                           
  3421                           ;lcd_potes.c: 105:     if (PIR1bits.TMR1IF){
  3422  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0493  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0494  1C0C               	btfss	12,0	;volatile
  3425  0495  2C97               	goto	u85_21
  3426  0496  2C98               	goto	u85_20
  3427  0497                     u85_21:
  3428  0497  2C9D               	goto	i1l1595
  3429  0498                     u85_20:
  3430  0498                     i1l1591:
  3431                           
  3432                           ;lcd_potes.c: 106:         PIR1bits.TMR1IF = 0;
  3433  0498  100C               	bcf	12,0	;volatile
  3434  0499                     i1l1593:
  3435                           
  3436                           ;lcd_potes.c: 107:         TMR1H = 248;
  3437  0499  30F8               	movlw	248
  3438  049A  008F               	movwf	15	;volatile
  3439                           
  3440                           ;lcd_potes.c: 108:         TMR1L = 48;
  3441  049B  3030               	movlw	48
  3442  049C  008E               	movwf	14	;volatile
  3443  049D                     i1l1595:
  3444                           
  3445                           ;lcd_potes.c: 111:     if (PIR1bits.ADIF){
  3446  049D  1F0C               	btfss	12,6	;volatile
  3447  049E  2CA0               	goto	u86_21
  3448  049F  2CA1               	goto	u86_20
  3449  04A0                     u86_21:
  3450  04A0  2CB4               	goto	i1l100
  3451  04A1                     u86_20:
  3452  04A1                     i1l1597:
  3453                           
  3454                           ;lcd_potes.c: 112:         if (ADCON0bits.CHS == 0){
  3455  04A1  0C1F               	rrf	31,w	;volatile
  3456  04A2  00F0               	movwf	??_isr
  3457  04A3  0C70               	rrf	??_isr,w
  3458  04A4  390F               	andlw	15
  3459  04A5  3A00               	xorlw	0
  3460  04A6  1D03               	skipz
  3461  04A7  2CA9               	goto	u87_21
  3462  04A8  2CAA               	goto	u87_20
  3463  04A9                     u87_21:
  3464  04A9  2CAF               	goto	i1l1601
  3465  04AA                     u87_20:
  3466  04AA                     i1l1599:
  3467                           
  3468                           ;lcd_potes.c: 113:             pote1 = ADRESH;
  3469  04AA  081E               	movf	30,w	;volatile
  3470  04AB  00F0               	movwf	??_isr
  3471  04AC  0870               	movf	??_isr,w
  3472  04AD  00CD               	movwf	_pote1
  3473                           
  3474                           ;lcd_potes.c: 114:         }
  3475  04AE  2CB3               	goto	i1l1603
  3476  04AF                     i1l1601:
  3477                           
  3478                           ;lcd_potes.c: 116:             pote2 = ADRESH;
  3479  04AF  081E               	movf	30,w	;volatile
  3480  04B0  00F0               	movwf	??_isr
  3481  04B1  0870               	movf	??_isr,w
  3482  04B2  00CC               	movwf	_pote2
  3483  04B3                     i1l1603:
  3484                           
  3485                           ;lcd_potes.c: 118:         PIR1bits.ADIF = 0;
  3486  04B3  130C               	bcf	12,6	;volatile
  3487  04B4                     i1l100:
  3488  04B4  0872               	movf	??_isr+2,w
  3489  04B5  008A               	movwf	10
  3490  04B6  0E71               	swapf	??_isr+1,w
  3491  04B7  0083               	movwf	3
  3492  04B8  0EFE               	swapf	btemp,f
  3493  04B9  0E7E               	swapf	btemp,w
  3494  04BA  0009               	retfie
  3495  04BB                     __end_of_isr:
  3496  007E                     btemp	set	126	;btemp
  3497  007E                     wtemp0	set	126
  3498                           
  3499                           	psect	intentry
  3500  0004                     __pintentry:	
  3501                           ;incstack = 0
  3502                           ; Regs used in _isr: [wreg+status,2+status,0]
  3503                           
  3504  0004                     interrupt_function:
  3505  007E                     saved_w	set	btemp
  3506  0004  00FE               	movwf	btemp
  3507  0005  0E03               	swapf	3,w
  3508  0006  00F1               	movwf	??_isr+1
  3509  0007  080A               	movf	10,w
  3510  0008  00F2               	movwf	??_isr+2
  3511  0009  120A  118A  2C92   	ljmp	_isr
  3512                           
  3513                           	psect	config
  3514                           
  3515                           ;Config register CONFIG1 @ 0x2007
  3516                           ;	Oscillator Selection bits
  3517                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3518                           ;	Watchdog Timer Enable bit
  3519                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3520                           ;	Power-up Timer Enable bit
  3521                           ;	PWRTE = OFF, PWRT disabled
  3522                           ;	RE3/MCLR pin function select bit
  3523                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3524                           ;	Code Protection bit
  3525                           ;	CP = OFF, Program memory code protection is disabled
  3526                           ;	Data Code Protection bit
  3527                           ;	CPD = OFF, Data memory code protection is disabled
  3528                           ;	Brown Out Reset Selection bits
  3529                           ;	BOREN = OFF, BOR disabled
  3530                           ;	Internal External Switchover bit
  3531                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3532                           ;	Fail-Safe Clock Monitor Enabled bit
  3533                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3534                           ;	Low Voltage Programming Enable bit
  3535                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3536                           ;	In-Circuit Debugger Mode bit
  3537                           ;	DEBUG = 0x1, unprogrammed default
  3538  2007                     	org	8199
  3539  2007  20D4               	dw	8404
  3540                           
  3541                           ;Config register CONFIG2 @ 0x2008
  3542                           ;	Brown-out Reset Selection bit
  3543                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3544                           ;	Flash Program Memory Self Write Enable bits
  3545                           ;	WRT = OFF, Write protection off
  3546  2008                     	org	8200
  3547  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     38      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> buffer(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_writeString@text	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[15]), STR_3(CODE[3]), STR_2(CODE[3]), buffer(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_setCursor
    _main->_LCD_writeString
    _transform->___awdiv
    _sprintf->___lwdiv
    _division->___lwdiv
    ___lwmod->___lwdiv
    ___awdiv->___wmul
    _lcd_setup->_LCD_START
    _lcd_setup->_LCD_setCursor
    _lcd_setup->_LCD_writeString
    _LCD_writeString->_LCD_write
    _LCD_write->_flip_EN
    _LCD_setCursor->_LCD_CMD
    _LCD_START->_LCD_CMD
    _LCD_CMD->_flip_EN
    _config_adc->_con_ADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_transform
    _transform->_sprintf
    _sprintf->___lwmod
    _division->___lwmod
    ___lwmod->___lwdiv
    ___awdiv->___wmul
    _lcd_setup->_LCD_writeString

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6912
                                             36 BANK0      2     2      0
                      _LCD_setCursor
                    _LCD_writeString
                              _setup
                          _transform
 ---------------------------------------------------------------------------------
 (1) _transform                                           10    10      0    4968
                                             26 BANK0     10    10      0
                            ___awdiv
                             ___wmul
                           _division
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    18      7    2370
                                              9 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _division                                             5     3      2    1765
                                              9 BANK0      5     3      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     767
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1016
                         _config_adc
                       _config_clock
                          _config_ie
                          _config_io
                        _config_tmr1
                          _lcd_setup
 ---------------------------------------------------------------------------------
 (2) _lcd_setup                                            0     0      0     950
                          _LCD_START
                      _LCD_setCursor
                    _LCD_writeString
 ---------------------------------------------------------------------------------
 (3) _LCD_writeString                                      7     5      2     602
                                              6 COMMON     2     0      2
                                              0 BANK0      5     5      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (4) _LCD_write                                            1     1      0      22
                                              5 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (3) _LCD_setCursor                                        4     3      1     326
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_START                                            2     2      0      22
                                              6 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _LCD_CMD                                              1     1      0      22
                                              5 COMMON     1     1      0
                            _flip_EN
 ---------------------------------------------------------------------------------
 (5) _flip_EN                                              2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _config_tmr1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ie                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_adc                                           1     1      0      66
                                              4 COMMON     1     1      0
                            _con_ADC
 ---------------------------------------------------------------------------------
 (3) _con_ADC                                              1     1      0      66
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_setCursor
     _LCD_CMD
       _flip_EN
   _LCD_writeString
     _LCD_write
       _flip_EN
   _setup
     _config_adc
       _con_ADC
     _config_clock
     _config_ie
     _config_io
     _config_tmr1
     _lcd_setup
       _LCD_START
         _LCD_CMD
       _LCD_setCursor
       _LCD_writeString
   _transform
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _division
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _sprintf
       ___lwdiv
       ___lwmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 03 11:25:44 2022

                       pc 0002                        l91 04D9              ___awdiv@sign 0027  
                      fsr 0004       ___wmul@multiplicand 0075          con_ADC@ADC_valor 0073  
                     l103 0256                       l106 02A9                       l123 0505  
                     l115 014E                       l132 055E                       l126 0557  
                     l135 0517                       l303 0477                       l160 054F  
                     l145 03CE                       l129 0543                       l305 0491  
                     l146 03E0                       l138 04F0                       l163 02F5  
                     l148 03F2                       l157 0535                       l174 0466  
                     l183 0381                       l177 0526                       l456 01F8  
                     l299 010E                       l575 033B                       l585 03BD  
                     u500 03E6                       u501 03E5                       u600 039C  
                     u601 039B                       u610 03A6                       u611 03A5  
                     u630 03B9                       u631 03B8                       u615 03A2  
                     u480 03C4                       u481 03C3                       u625 03AD  
                     u490 03D4                       u810 01D6                       u491 03D3  
                     u811 01D5                       u900 036F                       u580 038A  
                     u805 01C6                       u581 0389                       u910 0381  
                     u830 01EA                       u750 0197                       u911 0380  
                     u831 01E9                       u815 01D2                       u751 0196  
                     u840 01EF                       u760 01A2                       u920 0300  
                     u841 01EE                       u825 01DE                       u761 01A1  
                     u921 02FF                       u770 01B3                       u771 01B2  
                     u595 038E                       u940 0312                       u941 0311  
                     u790 01C5                       u791 01C4                       u935 0304  
                     u960 0323                       u785 01B7                       u961 0322  
                     u890 034B                       u955 0313                       u980 0337  
                     u981 0336                       u965 031F                       u990 0033  
                     u975 032B                       u991 0032                       _dec 0049  
                     _cen 004A                       _isr 0492                       fsr0 0004  
                     _uni 0048                       indf 0000           __end_of_LCD_CMD 0550  
                    l1321 03CD                      l1401 03A6                      l1331 03EB  
                    l1323 03D4                      l1315 03BF                      l1411 04F1  
                    l1403 03AC                      l1333 03F1                      l1325 03D9  
                    l1317 03C4                      l1413 04F4                      l1341 02B8  
                    l1405 03B3                      l1327 03DF                      l1319 03C9  
                    l1423 0550                      l1415 04F5                      l1431 053E  
                    l1271 0532                      l1351 02D7                      l1343 02BE  
                    l1335 02AA                      l1407 03B9                      l1329 03E6  
                    l1441 050C                      l1425 0556                      l1417 04FA  
                    l1433 0542                      l1273 0545                      l1353 02DD  
                    l1345 02C6                      l1337 02AE                      l1281 0519  
                    l1443 0512                      l1419 04FB                      l1267 0527  
                    l1275 0548                      l1355 02E3                      l1347 02CC  
                    l1339 02AF                      l1283 051C                      l1531 0193  
                    l1437 0558                      l1429 0536                      l1269 052A  
                    l1277 054A                      l1357 02E9                      l1349 02D1  
                    l1285 051E                      l1541 01A7                      l1533 0197  
                    l1439 0506                      l1359 02EF                      l1287 0523  
                    l1551 01BD                      l1543 01AB                      l1535 019C  
                    l1391 038A                      l1561 01DD                      l1553 01C1  
                    l1545 01AD                      l1537 019E                      l1529 0190  
                    l1393 038D                      l1801 0069                      l1731 044A  
                    l1563 01E4                      l1555 01C5                      l1547 01B3  
                    l1539 01A2                      l1395 0394                      l1803 006D  
                    l1725 0435                      l1741 033C                      l1557 01D6  
                    l1549 01B6                      l1565 01EA                      l1397 0398  
                    l1389 0382                      l1821 00A4                      l1813 0078  
                    l1805 0071                      l1727 0436                      l1735 0454  
                    l1743 0341                      l1567 01EF                      l1559 01DC  
                    l1751 02FA                      l1399 039C                      l1831 00EB  
                    l1823 00AB                      l1807 0076                      l1911 0169  
                    l1903 013E                      l1729 0440                      l1745 035D  
                    l1569 01F4                      l1761 0312                      l1753 0300  
                    l1833 00EF                      l1825 00AF                      l1817 0094  
                    l1913 0172                      l1905 0150                      l1747 0365  
                    l1851 047E                      l1763 0323                      l1755 0303  
                    l1771 0337                      l1827 00B4                      l1819 009E  
                    l1835 00F8                      l1915 017A                      l1907 0158  
                    l1861 04C0                      l1853 0485                      l1845 0467  
                    l1765 0329                      l1757 030A                      l1749 02F6  
                    l1781 01F9                      l1829 00E4                      l1837 010A  
                    l1917 0183                      l1909 0160                      l1775 04DA  
                    l1863 04C5                      l1855 048B                      l1847 046B  
                    l1767 032A                      l1759 030E                      l1791 003F  
                    l1783 0028                      l1871 025A                      l1777 04DF  
                    l1865 04CF                      l1849 046F                      l1769 0331  
                    l1785 002D                      l1873 0288                      l1779 04E7  
                    l1867 04D4                      l1859 04BB                      l1795 0040  
                    l1787 0033                      l1891 0130                      l1883 011E  
                    l1875 010F                      l1797 005D                      l1789 003A  
                    l1893 0137                      l1885 0120                      l1877 0114  
                    l1799 0065                      l1983 0146                      l1895 013B  
                    l1887 0127                      l1879 0117                      l1985 0052  
                    l1889 012C                      l1987 045E                      ?_isr 0070  
                    STR_1 0429                      STR_2 0431                      STR_3 0431  
                    STR_4 041A                      u1000 006D                      u1001 006C  
                    u1010 0093                      u1011 0092                      u1020 009E  
                    u1100 011D                      u1021 009D                      u1101 011C  
                    u1030 00A4                      u1031 00A3                      u1015 008F  
                    u1040 00F8                      u1041 00F7                      u1050 010A  
                    u1051 0109                      u1060 046F                      u1061 046E  
                    u1117 0124                      u1127 0134                      u1137 02B3  
                    u1090 048B                      u1147 02C2                      u1091 048A  
                    u1075 0478                      u1157 02CE                      u1085 047F  
                    u1167 052E                      u1177 0514        __size_of_LCD_START 004C  
                    _main 010F                      btemp 007E    __size_of_LCD_setCursor 0033  
          ??_config_clock 0073                      start 000C          ?_LCD_writeString 0076  
      __size_of_LCD_write 000F                     ??_isr 0070                     ?_main 0070  
         __end_of___awdiv 01F9                     _ANSEL 0188           ___awdiv@divisor 0022  
         __end_of___lwdiv 033C                     i1l100 04B4           __end_of___lwmod 03BE  
         ___awdiv@counter 0026                     _TMR1H 000F                     _TMR1L 000E  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     u85_20 0498  
                   u85_21 0497                     u86_20 04A1                     u86_21 04A0  
                   u87_20 04AA                     u87_21 04A9           __end_of_con_ADC 03F3  
         __end_of_flip_EN 0536           __end_of_dpowers 041A                     _pote1 004D  
                   _pote2 004C                     _value 0046                     _valor 0078  
                   _setup 04BB                     _volt1 007A                     _volt2 0079  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 010F           __initialization 000F              __end_of_main 0190  
                  ??_main 0044         __end_of_LCD_START 02F6             _LCD_setCursor 0434  
               ??_LCD_CMD 0075         __end_of_LCD_write 0527                    _ADRESH 001E  
        ___awdiv@dividend 0024                    ?_setup 0070                    _ANSELH 0189  
                  i1l1601 04AF                    i1l1603 04B3                    i1l1591 0498  
                  i1l1593 0499                    i1l1595 049D                    i1l1597 04A1  
                  i1l1589 0492                    i1l1599 04AA          __end_of_division 0257  
                  ___wmul 0467                 ??___awdiv 0077      __size_of_config_tmr1 000E  
               ??___lwdiv 0077                 ??___lwmod 0027                    _buffer 004E  
               ??_con_ADC 0073          ___awdiv@quotient 0028            ?_LCD_setCursor 0076  
               ??_flip_EN 0073      __end_of_config_clock 0558                    saved_w 007E  
       LCD_setCursor@fila 0077                 ??_sprintf 0030   __end_of__initialization 0021  
          __pcstackCOMMON 0070                _adc_change 004B             __end_of_setup 04DA  
           division@value 0029        __size_of_config_ie 0007        __size_of_config_io 0015  
      __size_of_lcd_setup 0017                   ??_setup 0078                __pbssBANK0 0046  
              __pmaintext 010F                   ?___wmul 0073                __pintentry 0004  
         ??_LCD_setCursor 0020            LCD_write@value 0075                   _LCD_CMD 0544  
              _config_adc 0506        __size_of_transform 0053                __stringtab 0400  
               ?_division 0029         __end_of_config_ie 055F         __end_of_config_io 0506  
       __end_of_lcd_setup 04F1                   ___awdiv 0190           __size_of___wmul 002B  
                 ___lwdiv 02F6                   ___lwmod 0382     __size_of_config_clock 0008  
                 _con_ADC 03BE                 _ANSELbits 0188                   __ptext1 0257  
                 __ptext2 0025                   __ptext3 01F9                   __ptext4 0382  
                 __ptext5 02F6                   __ptext6 0467                   __ptext7 0190  
                 __ptext8 04BB                   __ptext9 04DA                   _flip_EN 0527  
__size_of_LCD_writeString 0046       LCD_writeString@text 0076                 _T1CONbits 0010  
                 _dpowers 0410              __size_of_isr 0029          LCD_writeString@i 0023  
               _LCD_START 02AA             transform@temp 0042                   _sprintf 0025  
    end_of_initialization 0021                ??_division 002B                 _LCD_write 0518  
            _config_clock 0550         __end_of_transform 02AA                 _PORTCbits 0007  
              LCD_CMD@cmd 0075               ?_config_adc 0070                 _TRISAbits 0085  
              ?_LCD_START 0070                ?_LCD_write 0070             ??_config_tmr1 0073  
          __end_of___wmul 0492       start_initialization 000F               __end_of_isr 04BB  
       ??_LCD_writeString 0020       __size_of_config_adc 0012                  ??___wmul 0077  
     __end_of_config_tmr1 0544                  ?_LCD_CMD 0070               __pbssCOMMON 0078  
               ___latbits 0002             __pcstackBANK0 0020               ??_LCD_START 0076  
             ??_LCD_write 0075               sprintf@flag 0034         __size_of_division 005E  
             sprintf@prec 0035          ___lwdiv@dividend 0075                  ?___awdiv 0022  
                ?___lwdiv 0073                  ?___lwmod 0023                  ?_con_ADC 0070  
               _config_ie 0558                 _config_io 04F1     __end_of_LCD_setCursor 0467  
               __pstrings 0400                 _lcd_setup 04DA                  ?_flip_EN 0070  
        ___lwdiv@quotient 0021                  ?_sprintf 0029            __size_of_setup 001F  
       interrupt_function 0004            ___wmul@product 0020                  _PIE1bits 008C  
                _PIR1bits 000C               _config_tmr1 0536                ?_config_ie 0070  
              ?_config_io 0070                ?_lcd_setup 0070                _ADCON0bits 001F  
             __stringbase 040F                _ADCON1bits 009F         ___wmul@multiplier 0073  
               _transform 0257          __size_of_LCD_CMD 000C              ??_config_adc 0074  
      __end_of_config_adc 0518          __size_of___awdiv 0069          __size_of___lwdiv 0046  
        __size_of___lwmod 003C           _LCD_writeString 033C        __end_of__stringtab 0410  
        __size_of_con_ADC 0035                ?_transform 0070          __size_of_flip_EN 000F  
              sprintf@val 0036           ___lwdiv@divisor 0073           ___lwdiv@counter 0020  
                __ptext10 033C                  __ptext11 0518                  __ptext20 0506  
                __ptext12 0434                  __ptext21 03BE                  __ptext13 02AA  
                __ptext22 0492                  __ptext14 0544                  __ptext15 0527  
                __ptext16 0536                  __ptext17 04F1                  __ptext18 0558  
                __ptext19 0550                  _division 01F9          __size_of_sprintf 00EA  
           __size_of_main 0081      LCD_setCursor@columna 0076            transform@valor 0041  
             ??_config_ie 0073               ??_config_io 0073               ??_lcd_setup 0078  
              _INTCONbits 000B                  intlevel1 0000                 sprintf@ap 0033  
               sprintf@sp 0038          ___lwmod@dividend 0025                 stringcode 040A  
              _OSCCONbits 008F   __end_of_LCD_writeString 0382               ??_transform 003A  
                sprintf@c 0039                  sprintf@f 0029           ___lwmod@divisor 0023  
         ___lwmod@counter 0028                  stringdir 040A                  stringtab 0400  
           _division$1155 002C             ?_config_clock 0070              ?_config_tmr1 0070  
