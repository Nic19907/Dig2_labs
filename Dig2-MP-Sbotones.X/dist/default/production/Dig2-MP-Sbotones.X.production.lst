

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 11:48:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0013                     _SSPBUF	set	19
   292  0014                     _SSPCON	set	20
   293  0006                     _PORTB	set	6
   294  000B                     _INTCONbits	set	11
   295  0008                     _PORTD	set	8
   296  000C                     _PIR1bits	set	12
   297  0035                     _RB5	set	53
   298  0037                     _RB7	set	55
   299  0094                     _SSPSTATbits	set	148
   300  0094                     _SSPSTAT	set	148
   301  0095                     _WPUBbits	set	149
   302  0081                     _OPTION_REGbits	set	129
   303  0096                     _IOCBbits	set	150
   304  008C                     _PIE1bits	set	140
   305  008F                     _OSCCONbits	set	143
   306  0088                     _TRISD	set	136
   307  0086                     _TRISB	set	134
   308  043C                     _TRISC4	set	1084
   309  042D                     _TRISA5	set	1069
   310  043B                     _TRISC3	set	1083
   311  043D                     _TRISC5	set	1085
   312  0189                     _ANSELH	set	393
   313  0188                     _ANSEL	set	392
   314                           
   315                           	psect	cinit
   316  000F                     start_initialization:	
   317                           ; #config settings
   318                           
   319  000F                     __initialization:
   320                           
   321                           ; Clear objects allocated to COMMON
   322  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   323  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   324  0011                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  0011                     __end_of__initialization:
   328  0011  0183               	clrf	3
   329  0012  120A  118A  2891   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssCOMMON
   332  0078                     __pbssCOMMON:
   333  0078                     _contador:
   334  0078                     	ds	1
   335  0079                     _trash:
   336  0079                     	ds	1
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:
   340  0070                     ?_spiRead:
   341  0070                     ??_spiRead:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_spiWrite:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_spiWrite:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_setup:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_config_io:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_config_clock:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_config_ie:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_config_iocb:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_config_pull:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_isr:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_main:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_spiReceiveWait:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ??_spiReceiveWait:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     spiWrite@dat:	
   381                           ; 1 bytes @ 0x0
   382                           
   383                           
   384                           ; 1 bytes @ 0x0
   385  0070                     	ds	1
   386  0071                     ??_isr:
   387                           
   388                           ; 1 bytes @ 0x1
   389  0071                     	ds	3
   390  0074                     ??_config_io:
   391  0074                     ??_config_clock:	
   392                           ; 1 bytes @ 0x4
   393                           
   394  0074                     ??_config_ie:	
   395                           ; 1 bytes @ 0x4
   396                           
   397  0074                     ??_config_iocb:	
   398                           ; 1 bytes @ 0x4
   399                           
   400  0074                     ??_config_pull:	
   401                           ; 1 bytes @ 0x4
   402                           
   403  0074                     ?_spiInit:	
   404                           ; 1 bytes @ 0x4
   405                           
   406  0074                     spiInit@sDataSample:	
   407                           ; 1 bytes @ 0x4
   408                           
   409                           
   410                           ; 1 bytes @ 0x4
   411  0074                     	ds	1
   412  0075                     spiInit@sClockIdle:
   413                           
   414                           ; 1 bytes @ 0x5
   415  0075                     	ds	1
   416  0076                     spiInit@sTransmitEdge:
   417                           
   418                           ; 1 bytes @ 0x6
   419  0076                     	ds	1
   420  0077                     ??_spiInit:
   421  0077                     spiInit@sType:	
   422                           ; 1 bytes @ 0x7
   423                           
   424                           
   425                           ; 1 bytes @ 0x7
   426  0077                     	ds	1
   427  0078                     ??_setup:
   428  0078                     ??_main:	
   429                           ; 1 bytes @ 0x8
   430                           
   431                           
   432                           	psect	maintext
   433  0091                     __pmaintext:	
   434                           ; 1 bytes @ 0x8
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 91 in file "botones_main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, status,0, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels required when called: 5
   460 ;; This function calls:
   461 ;;		_setup
   462 ;; This function is called by:
   463 ;;		Startup code after reset
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _main
   469  0091                     _main:
   470  0091                     l823:	
   471                           ;incstack = 0
   472                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   473                           
   474                           
   475                           ;botones_main.c: 92:     setup();
   476  0091  120A  118A  2048  120A  118A  	fcall	_setup
   477  0096                     l825:
   478                           
   479                           ;botones_main.c: 95:         PORTD = contador;
   480  0096  0878               	movf	_contador,w
   481  0097  1283               	bcf	3,5	;RP0=0, select bank0
   482  0098  1303               	bcf	3,6	;RP1=0, select bank0
   483  0099  0088               	movwf	8	;volatile
   484  009A  2896               	goto	l825
   485  009B  120A  118A  280C   	ljmp	start
   486  009E                     __end_of_main:
   487                           
   488                           	psect	text1
   489  0048                     __ptext1:	
   490 ;; *************** function _setup *****************
   491 ;; Defined at:
   492 ;;		line 105 in file "botones_main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, status,2, status,0, pclath, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels used: 1
   512 ;; Hardware stack levels required when called: 4
   513 ;; This function calls:
   514 ;;		_config_clock
   515 ;;		_config_ie
   516 ;;		_config_io
   517 ;;		_config_iocb
   518 ;;		_config_pull
   519 ;;		_spiInit
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _setup
   527  0048                     _setup:
   528  0048                     l813:	
   529                           ;incstack = 0
   530                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   531                           
   532                           
   533                           ;botones_main.c: 106:     config_io();
   534  0048  120A  118A  2083  120A  118A  	fcall	_config_io
   535                           
   536                           ;botones_main.c: 107:     config_clock();
   537  004D  120A  118A  20A7  120A  118A  	fcall	_config_clock
   538  0052                     l815:
   539                           
   540                           ;botones_main.c: 108:     config_ie();
   541  0052  120A  118A  20AF  120A  118A  	fcall	_config_ie
   542  0057                     l817:
   543                           
   544                           ;botones_main.c: 109:     config_iocb();
   545  0057  120A  118A  20C3  120A  118A  	fcall	_config_iocb
   546  005C                     l819:
   547                           
   548                           ;botones_main.c: 110:     config_pull();
   549  005C  120A  118A  20BD  120A  118A  	fcall	_config_pull
   550  0061                     l821:
   551                           
   552                           ;botones_main.c: 113:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDL
      +                          E_LOW, SPI_IDLE_2_ACTIVE);
   553  0061  01F4               	clrf	spiInit@sDataSample
   554  0062  01F5               	clrf	spiInit@sClockIdle
   555  0063  01F6               	clrf	spiInit@sTransmitEdge
   556  0064  3024               	movlw	36
   557  0065  120A  118A  206B  120A  118A  	fcall	_spiInit
   558  006A                     l72:
   559  006A  0008               	return
   560  006B                     __end_of_setup:
   561                           
   562                           	psect	text2
   563  006B                     __ptext2:	
   564 ;; *************** function _spiInit *****************
   565 ;; Defined at:
   566 ;;		line 12 in file "SPI.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;  sType           1    wreg     enum E1264
   569 ;;  sDataSample     1    4[COMMON] enum E1272
   570 ;;  sClockIdle      1    5[COMMON] enum E1276
   571 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  sType           1    7[COMMON] enum E1264
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         3       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0
   586 ;;      Totals:         4       0       0       0       0
   587 ;;Total ram usage:        4 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; Hardware stack levels required when called: 3
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_setup
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           
   598                           ;psect for function _spiInit
   599  006B                     _spiInit:
   600                           
   601                           ;incstack = 0
   602                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   603                           ;spiInit@sType stored from wreg
   604  006B  00F7               	movwf	spiInit@sType
   605  006C                     l799:
   606                           
   607                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   608  006C  1683               	bsf	3,5	;RP0=1, select bank1
   609  006D  1303               	bcf	3,6	;RP1=0, select bank1
   610  006E  1287               	bcf	7,5	;volatile
   611                           
   612                           ;SPI.c: 15:     if(sType & 0b00000100)
   613  006F  1D77               	btfss	spiInit@sType,2
   614  0070  2872               	goto	u71
   615  0071  2873               	goto	u70
   616  0072                     u71:
   617  0072  2878               	goto	l807
   618  0073                     u70:
   619  0073                     l801:
   620                           
   621                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   622  0073  0876               	movf	spiInit@sTransmitEdge,w
   623  0074  0094               	movwf	20	;volatile
   624  0075                     l803:
   625                           
   626                           ;SPI.c: 18:         TRISC3 = 1;
   627  0075  1587               	bsf	7,3	;volatile
   628  0076                     l805:
   629                           
   630                           ;SPI.c: 19:         TRISA5 = 1;
   631  0076  1685               	bsf	5,5	;volatile
   632                           
   633                           ;SPI.c: 20:     }
   634  0077  287C               	goto	l811
   635  0078                     l807:
   636                           
   637                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   638  0078  0874               	movf	spiInit@sDataSample,w
   639  0079  0476               	iorwf	spiInit@sTransmitEdge,w
   640  007A  0094               	movwf	20	;volatile
   641  007B                     l809:
   642                           
   643                           ;SPI.c: 24:         TRISC3 = 0;
   644  007B  1187               	bcf	7,3	;volatile
   645  007C                     l811:
   646                           
   647                           ;SPI.c: 26:     TRISC4 = 1;
   648  007C  1607               	bsf	7,4	;volatile
   649                           
   650                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   651  007D  0877               	movf	spiInit@sType,w
   652  007E  0475               	iorwf	spiInit@sClockIdle,w
   653  007F  1283               	bcf	3,5	;RP0=0, select bank0
   654  0080  1303               	bcf	3,6	;RP1=0, select bank0
   655  0081  0094               	movwf	20	;volatile
   656  0082                     l108:
   657  0082  0008               	return
   658  0083                     __end_of_spiInit:
   659                           
   660                           	psect	text3
   661  00BD                     __ptext3:	
   662 ;; *************** function _config_pull *****************
   663 ;; Defined at:
   664 ;;		line 147 in file "botones_main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		None
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used: 1
   684 ;; Hardware stack levels required when called: 3
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_setup
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _config_pull
   694  00BD                     _config_pull:
   695  00BD                     l735:	
   696                           ;incstack = 0
   697                           ; Regs used in _config_pull: []
   698                           
   699                           
   700                           ;botones_main.c: 148:     OPTION_REGbits.nRBPU = 0;
   701  00BD  1683               	bsf	3,5	;RP0=1, select bank1
   702  00BE  1303               	bcf	3,6	;RP1=0, select bank1
   703  00BF  1381               	bcf	1,7	;volatile
   704                           
   705                           ;botones_main.c: 149:     WPUBbits.WPUB5 = 1;
   706  00C0  1695               	bsf	21,5	;volatile
   707                           
   708                           ;botones_main.c: 150:     WPUBbits.WPUB7 = 1;
   709  00C1  1795               	bsf	21,7	;volatile
   710  00C2                     l87:
   711  00C2  0008               	return
   712  00C3                     __end_of_config_pull:
   713                           
   714                           	psect	text4
   715  00C3                     __ptext4:	
   716 ;; *************** function _config_iocb *****************
   717 ;; Defined at:
   718 ;;		line 140 in file "botones_main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		None
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 3
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		_setup
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _config_iocb
   748  00C3                     _config_iocb:
   749  00C3                     l733:	
   750                           ;incstack = 0
   751                           ; Regs used in _config_iocb: []
   752                           
   753                           
   754                           ;botones_main.c: 142:     IOCBbits.IOCB5 = 1;
   755  00C3  1683               	bsf	3,5	;RP0=1, select bank1
   756  00C4  1303               	bcf	3,6	;RP1=0, select bank1
   757  00C5  1696               	bsf	22,5	;volatile
   758                           
   759                           ;botones_main.c: 143:     IOCBbits.IOCB7= 1;
   760  00C6  1796               	bsf	22,7	;volatile
   761                           
   762                           ;botones_main.c: 144:     INTCONbits.RBIF = 0;
   763  00C7  100B               	bcf	11,0	;volatile
   764  00C8                     l84:
   765  00C8  0008               	return
   766  00C9                     __end_of_config_iocb:
   767                           
   768                           	psect	text5
   769  0083                     __ptext5:	
   770 ;; *************** function _config_io *****************
   771 ;; Defined at:
   772 ;;		line 116 in file "botones_main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 3
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_setup
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _config_io
   802  0083                     _config_io:
   803  0083                     l717:	
   804                           ;incstack = 0
   805                           ; Regs used in _config_io: [wreg+status,2]
   806                           
   807                           
   808                           ;botones_main.c: 117:     ANSEL = 0;
   809  0083  1683               	bsf	3,5	;RP0=1, select bank3
   810  0084  1703               	bsf	3,6	;RP1=1, select bank3
   811  0085  0188               	clrf	8	;volatile
   812                           
   813                           ;botones_main.c: 118:     ANSELH = 0;
   814  0086  0189               	clrf	9	;volatile
   815  0087                     l719:
   816                           
   817                           ;botones_main.c: 120:     TRISB = 0b10100000;
   818  0087  30A0               	movlw	160
   819  0088  1683               	bsf	3,5	;RP0=1, select bank1
   820  0089  1303               	bcf	3,6	;RP1=0, select bank1
   821  008A  0086               	movwf	6	;volatile
   822  008B                     l721:
   823                           
   824                           ;botones_main.c: 121:     TRISD = 0;
   825  008B  0188               	clrf	8	;volatile
   826  008C                     l723:
   827                           
   828                           ;botones_main.c: 123:     PORTB = 0;
   829  008C  1283               	bcf	3,5	;RP0=0, select bank0
   830  008D  1303               	bcf	3,6	;RP1=0, select bank0
   831  008E  0186               	clrf	6	;volatile
   832  008F                     l725:
   833                           
   834                           ;botones_main.c: 124:     PORTD = 0;
   835  008F  0188               	clrf	8	;volatile
   836  0090                     l75:
   837  0090  0008               	return
   838  0091                     __end_of_config_io:
   839                           
   840                           	psect	text6
   841  00AF                     __ptext6:	
   842 ;; *************** function _config_ie *****************
   843 ;; Defined at:
   844 ;;		line 132 in file "botones_main.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		None
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; Hardware stack levels required when called: 3
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_setup
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _config_ie
   874  00AF                     _config_ie:
   875  00AF                     l731:	
   876                           ;incstack = 0
   877                           ; Regs used in _config_ie: []
   878                           
   879                           
   880                           ;botones_main.c: 133:     INTCONbits.GIE = 1;
   881  00AF  178B               	bsf	11,7	;volatile
   882                           
   883                           ;botones_main.c: 134:     INTCONbits.PEIE = 1;
   884  00B0  170B               	bsf	11,6	;volatile
   885                           
   886                           ;botones_main.c: 136:     INTCONbits.RBIE = 1;
   887  00B1  158B               	bsf	11,3	;volatile
   888                           
   889                           ;botones_main.c: 137:     PIE1bits.SSPIE = 1;
   890  00B2  1683               	bsf	3,5	;RP0=1, select bank1
   891  00B3  1303               	bcf	3,6	;RP1=0, select bank1
   892  00B4  158C               	bsf	12,3	;volatile
   893  00B5                     l81:
   894  00B5  0008               	return
   895  00B6                     __end_of_config_ie:
   896                           
   897                           	psect	text7
   898  00A7                     __ptext7:	
   899 ;; *************** function _config_clock *****************
   900 ;; Defined at:
   901 ;;		line 127 in file "botones_main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 3
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_setup
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _config_clock
   931  00A7                     _config_clock:
   932  00A7                     l727:	
   933                           ;incstack = 0
   934                           ; Regs used in _config_clock: [wreg+status,2+status,0]
   935                           
   936                           
   937                           ;botones_main.c: 128:     OSCCONbits.IRCF = 0b110;
   938  00A7  1683               	bsf	3,5	;RP0=1, select bank1
   939  00A8  1303               	bcf	3,6	;RP1=0, select bank1
   940  00A9  080F               	movf	15,w	;volatile
   941  00AA  398F               	andlw	-113
   942  00AB  3860               	iorlw	96
   943  00AC  008F               	movwf	15	;volatile
   944  00AD                     l729:
   945                           
   946                           ;botones_main.c: 129:     OSCCONbits.SCS = 1;
   947  00AD  140F               	bsf	15,0	;volatile
   948  00AE                     l78:
   949  00AE  0008               	return
   950  00AF                     __end_of_config_clock:
   951                           
   952                           	psect	text8
   953  0015                     __ptext8:	
   954 ;; *************** function _isr *****************
   955 ;; Defined at:
   956 ;;		line 68 in file "botones_main.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, pclath, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0
   972 ;;      Temps:          3       0       0       0       0
   973 ;;      Totals:         3       0       0       0       0
   974 ;;Total ram usage:        3 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 2
   977 ;; This function calls:
   978 ;;		_spiRead
   979 ;;		_spiWrite
   980 ;; This function is called by:
   981 ;;		Interrupt level 1
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           
   986                           ;psect for function _isr
   987  0015                     _isr:
   988  0015                     i1l771:
   989                           
   990                           ;botones_main.c: 69:     if (PIR1bits.SSPIF){
   991  0015  1283               	bcf	3,5	;RP0=0, select bank0
   992  0016  1303               	bcf	3,6	;RP1=0, select bank0
   993  0017  1D8C               	btfss	12,3	;volatile
   994  0018  281A               	goto	u3_21
   995  0019  281B               	goto	u3_20
   996  001A                     u3_21:
   997  001A  282E               	goto	i1l777
   998  001B                     u3_20:
   999  001B                     i1l773:
  1000                           
  1001                           ;botones_main.c: 70:         trash = spiRead();
  1002  001B  120A  118A  209E  120A  118A  	fcall	_spiRead
  1003  0020  00F1               	movwf	??_isr
  1004  0021  0871               	movf	??_isr,w
  1005  0022  00F9               	movwf	_trash
  1006                           
  1007                           ;botones_main.c: 71:         spiWrite(PORTD);
  1008  0023  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0024  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0025  0808               	movf	8,w	;volatile
  1011  0026  120A  118A  20C9  120A  118A  	fcall	_spiWrite
  1012  002B                     i1l775:
  1013                           
  1014                           ;botones_main.c: 72:         PIR1bits.SSPIF = 0;
  1015  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1016  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1017  002D  118C               	bcf	12,3	;volatile
  1018  002E                     i1l777:
  1019                           
  1020                           ;botones_main.c: 75:     if (INTCONbits.RBIF){
  1021  002E  1C0B               	btfss	11,0	;volatile
  1022  002F  2831               	goto	u4_21
  1023  0030  2832               	goto	u4_20
  1024  0031                     u4_21:
  1025  0031  2841               	goto	i1l61
  1026  0032                     u4_20:
  1027  0032                     i1l779:
  1028                           
  1029                           ;botones_main.c: 76:         if (!RB7){
  1030  0032  1B86               	btfsc	6,7	;volatile
  1031  0033  2835               	goto	u5_21
  1032  0034  2836               	goto	u5_20
  1033  0035                     u5_21:
  1034  0035  283A               	goto	i1l783
  1035  0036                     u5_20:
  1036  0036                     i1l781:
  1037                           
  1038                           ;botones_main.c: 77:             contador++;
  1039  0036  3001               	movlw	1
  1040  0037  00F1               	movwf	??_isr
  1041  0038  0871               	movf	??_isr,w
  1042  0039  07F8               	addwf	_contador,f
  1043  003A                     i1l783:
  1044                           
  1045                           ;botones_main.c: 79:         if (!RB5){
  1046  003A  1A86               	btfsc	6,5	;volatile
  1047  003B  283D               	goto	u6_21
  1048  003C  283E               	goto	u6_20
  1049  003D                     u6_21:
  1050  003D  2840               	goto	i1l787
  1051  003E                     u6_20:
  1052  003E                     i1l785:
  1053                           
  1054                           ;botones_main.c: 80:             contador--;
  1055  003E  3001               	movlw	1
  1056  003F  02F8               	subwf	_contador,f
  1057  0040                     i1l787:
  1058                           
  1059                           ;botones_main.c: 82:         INTCONbits.RBIF = 0;
  1060  0040  100B               	bcf	11,0	;volatile
  1061  0041                     i1l61:
  1062  0041  0873               	movf	??_isr+2,w
  1063  0042  008A               	movwf	10
  1064  0043  0E72               	swapf	??_isr+1,w
  1065  0044  0083               	movwf	3
  1066  0045  0EFE               	swapf	btemp,f
  1067  0046  0E7E               	swapf	btemp,w
  1068  0047  0009               	retfie
  1069  0048                     __end_of_isr:
  1070                           
  1071                           	psect	intentry
  1072  0004                     __pintentry:	
  1073                           ;incstack = 0
  1074                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1075                           
  1076  0004                     interrupt_function:
  1077  007E                     saved_w	set	btemp
  1078  0004  00FE               	movwf	btemp
  1079  0005  0E03               	swapf	3,w
  1080  0006  00F2               	movwf	??_isr+1
  1081  0007  080A               	movf	10,w
  1082  0008  00F3               	movwf	??_isr+2
  1083  0009  120A  118A  2815   	ljmp	_isr
  1084                           
  1085                           	psect	text9
  1086  00C9                     __ptext9:	
  1087 ;; *************** function _spiWrite *****************
  1088 ;; Defined at:
  1089 ;;		line 35 in file "SPI.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  dat             1    wreg     unsigned char 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  dat             1    0[COMMON] unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         1       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         1       0       0       0       0
  1107 ;;Total ram usage:        1 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_isr
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _spiWrite
  1118  00C9                     _spiWrite:
  1119                           
  1120                           ;incstack = 0
  1121                           ; Regs used in _spiWrite: [wreg]
  1122                           ;spiWrite@dat stored from wreg
  1123  00C9  00F0               	movwf	spiWrite@dat
  1124  00CA                     i1l759:
  1125                           
  1126                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1127  00CA  0870               	movf	spiWrite@dat,w
  1128  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1129  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1130  00CD  0093               	movwf	19	;volatile
  1131  00CE                     i1l117:
  1132  00CE  0008               	return
  1133  00CF                     __end_of_spiWrite:
  1134                           
  1135                           	psect	text10
  1136  009E                     __ptext10:	
  1137 ;; *************** function _spiRead *****************
  1138 ;; Defined at:
  1139 ;;		line 48 in file "SPI.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      unsigned char 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1153 ;;      Params:         0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0
  1156 ;;      Totals:         0       0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 1
  1160 ;; This function calls:
  1161 ;;		_spiReceiveWait
  1162 ;; This function is called by:
  1163 ;;		_isr
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function _spiRead
  1169  009E                     _spiRead:
  1170  009E                     i1l753:	
  1171                           ;incstack = 0
  1172                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1173                           
  1174                           
  1175                           ;SPI.c: 50:     spiReceiveWait();
  1176  009E  120A  118A  20B6  120A  118A  	fcall	_spiReceiveWait
  1177  00A3                     i1l755:
  1178                           
  1179                           ;SPI.c: 51:     return(SSPBUF);
  1180  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1181  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1182  00A5  0813               	movf	19,w	;volatile
  1183  00A6                     i1l125:
  1184  00A6  0008               	return
  1185  00A7                     __end_of_spiRead:
  1186                           
  1187                           	psect	text11
  1188  00B6                     __ptext11:	
  1189 ;; *************** function _spiReceiveWait *****************
  1190 ;; Defined at:
  1191 ;;		line 30 in file "SPI.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		None
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1205 ;;      Params:         0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0
  1208 ;;      Totals:         0       0       0       0       0
  1209 ;;Total ram usage:        0 bytes
  1210 ;; Hardware stack levels used: 1
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_spiRead
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _spiReceiveWait
  1220  00B6                     _spiReceiveWait:
  1221  00B6                     i1l751:	
  1222                           ;incstack = 0
  1223                           ; Regs used in _spiReceiveWait: []
  1224                           
  1225  00B6                     i1l111:	
  1226                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1227                           
  1228  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  1229  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  1230  00B8  1C14               	btfss	20,0	;volatile
  1231  00B9  28BB               	goto	u2_21
  1232  00BA  28BC               	goto	u2_20
  1233  00BB                     u2_21:
  1234  00BB  28B6               	goto	i1l111
  1235  00BC                     u2_20:
  1236  00BC                     i1l114:
  1237  00BC  0008               	return
  1238  00BD                     __end_of_spiReceiveWait:
  1239  007E                     btemp	set	126	;btemp
  1240  007E                     wtemp0	set	126
  1241                           
  1242                           	psect	config
  1243                           
  1244                           ;Config register CONFIG1 @ 0x2007
  1245                           ;	Oscillator Selection bits
  1246                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1247                           ;	Watchdog Timer Enable bit
  1248                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1249                           ;	Power-up Timer Enable bit
  1250                           ;	PWRTE = OFF, PWRT disabled
  1251                           ;	RE3/MCLR pin function select bit
  1252                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1253                           ;	Code Protection bit
  1254                           ;	CP = OFF, Program memory code protection is disabled
  1255                           ;	Data Code Protection bit
  1256                           ;	CPD = OFF, Data memory code protection is disabled
  1257                           ;	Brown Out Reset Selection bits
  1258                           ;	BOREN = OFF, BOR disabled
  1259                           ;	Internal External Switchover bit
  1260                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1261                           ;	Fail-Safe Clock Monitor Enabled bit
  1262                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1263                           ;	Low Voltage Programming Enable bit
  1264                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1265                           ;	In-Circuit Debugger Mode bit
  1266                           ;	DEBUG = 0x1, unprogrammed default
  1267  2007                     	org	8199
  1268  2007  20D4               	dw	8404
  1269                           
  1270                           ;Config register CONFIG2 @ 0x2008
  1271                           ;	Brown-out Reset Selection bit
  1272                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1273                           ;	Flash Program Memory Self Write Enable bits
  1274                           ;	WRT = OFF, Write protection off
  1275  2008                     	org	8200
  1276  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                       _config_clock
                          _config_ie
                          _config_io
                        _config_iocb
                        _config_pull
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _config_pull                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_iocb                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_ie                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_clock                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _config_clock
     _config_ie
     _config_io
     _config_iocb
     _config_pull
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 11:48:02 2022

            _SSPSTATbits 0094                       l72 006A                       l81 00B5  
                     l75 0090                       l84 00C8                       l78 00AE  
                     l87 00C2                       u70 0073                       u71 0072  
                    l108 0082                      l721 008B                      l801 0073  
                    l731 00AF                      l723 008C                      l811 007C  
                    l803 0075                      l725 008F                      l717 0083  
                    l733 00C3                      l805 0076                      l821 0061  
                    l813 0048                      l727 00A7                      l719 0087  
                    l735 00BD                      l807 0078                      l815 0052  
                    l823 0091                      l729 00AD                      l809 007B  
                    l817 0057                      l825 0096                      l819 005C  
                    l799 006C                      _RB5 0035                      _RB7 0037  
                    _isr 0015                     ?_isr 0070                     i1l61 0041  
                   u2_20 00BC                     u2_21 00BB                     u3_20 001B  
                   u3_21 001A                     u4_20 0032                     u4_21 0031  
                   u5_20 0036                     u5_21 0035                     u6_20 003E  
                   u6_21 003D                     _main 0091                     btemp 007E  
         ??_config_clock 0074                     start 000C                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l111 00B6  
                  i1l114 00BC                    i1l125 00A6                    i1l117 00CE  
                  i1l751 00B6                    i1l753 009E                    i1l755 00A3  
                  i1l771 0015                    i1l781 0036                    i1l773 001B  
                  i1l759 00CA                    i1l783 003A                    i1l775 002B  
                  i1l785 003E                    i1l777 002E                    i1l787 0040  
                  i1l779 0032                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _setup 0048  
                  _trash 0079                    pclath 000A          __end_of_spiInit 0083  
        __end_of_spiRead 00A7                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 009E                   ??_main 0078  
                 ?_setup 0070                   _ANSELH 0189                   _TRISA5 042D  
                 _TRISC3 043B                   _TRISC4 043C                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013     __size_of_config_iocb 0006  
   __size_of_config_pull 0006     __end_of_config_clock 00AF                   saved_w 007E  
       __end_of_spiWrite 00CF                ??_spiInit 0077                ??_spiRead 0070  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 006B  
         _OPTION_REGbits 0081       __size_of_config_ie 0007       __size_of_config_io 000E  
                ??_setup 0078               __pmaintext 0091               __pintentry 0004  
__size_of_spiReceiveWait 0007                  _SSPSTAT 0094        __end_of_config_ie 00B6  
      __end_of_config_io 0091                ?_spiWrite 0070    __size_of_config_clock 0008  
                __ptext1 0048                  __ptext2 006B                  __ptext3 00BD  
                __ptext4 00C3                  __ptext5 0083                  __ptext6 00AF  
                __ptext7 00A7                  __ptext8 0015                  __ptext9 00C9  
           __size_of_isr 0033                  _spiInit 006B                  _spiRead 009E  
   end_of_initialization 0011             _config_clock 00A7               ??_spiWrite 0070  
            spiWrite@dat 0070            ??_config_iocb 0074            ??_config_pull 0074  
         _spiReceiveWait 00B6      start_initialization 000F              __end_of_isr 0048  
 __end_of_spiReceiveWait 00BD      __end_of_config_iocb 00C9      __end_of_config_pull 00C3  
            __pbssCOMMON 0078                ___latbits 0002          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                _config_ie 00AF                _config_io 0083  
               ?_spiInit 0074                 ?_spiRead 0070           __size_of_setup 0023  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C       spiInit@sDataSample 0074              _config_iocb 00C3  
               _PIR1bits 000C              _config_pull 00BD               ?_config_ie 0070  
             ?_config_io 0070                 _WPUBbits 0095                 __ptext10 009E  
               __ptext11 00B6         __size_of_spiInit 0018         __size_of_spiRead 0009  
               _contador 0078            __size_of_main 000D                 _spiWrite 00C9  
           spiInit@sType 0077        spiInit@sClockIdle 0075              ??_config_ie 0074  
            ??_config_io 0074               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F            ?_config_clock 0070  
           ?_config_iocb 0070             ?_config_pull 0070  
